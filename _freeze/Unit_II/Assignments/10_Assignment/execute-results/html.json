{
  "hash": "371db06d368f1b60916fc439f38281d3",
  "result": {
    "markdown": "---\ntitle: \"Week 10 Assignment\"\n---\n\n\n![](../../img/programming_357EDD.svg){.hero}\n\n## Instructions\n\n*Create a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable `embed-resources` using the header below. If your answer involves writing text, then use markdown to write 2--4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.*\n\n```markdown\n---\nformat: \n  html:\n    embed-resources: true\n---\n```\n\n*Please clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any \"scratch work\" or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture).*\n\n## Question 1\n\na. Download the `records.csv` file from Canvas, put it in your project folder, and import it into R. Examine the tibble to familiarize yourself with it; it contains world records for several running events (as of October 2020). \n\nb.    Add a new variable to the tibble called `kmph` that contains the average speed attained in each record in kilometers per hour (you will need to calculate this from existing variables - be careful about units). Save this change so that you can use this new variable in future questions.\n\n\n## Question 2\n\na) Create a summary table using your data from Question 1 that contains the minimum, mean, and maximum speeds (in kmph).\n\nb) Create a summary table using your data from Question 1 that contains the minimum time (in seconds) and maximum speed (in kmph) for each distance (in meters).\n\n\n## Question 3\n\na) Create a summary table using your data from Question 1 that counts the number of running world records each nation held and the number of distinct world-record-holding runners it had produced (as of 2020).\n\n<p><details><summary>Hint</summary><blockquote>\nThe output should look something like this:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 3\n   nation         records runners\n   <chr>            <int>   <int>\n 1 Jamaica              2       1\n 2 United States        2       1\n 3 South Africa         1       1\n 4 East Germany         1       1\n 5 Kenya                3       3\n 6 Czechoslovakia       1       1\n 7 Russia               1       1\n 8 Morocco              2       1\n 9 Ethiopia             6       4\n10 China                1       1\n```\n:::\n:::\n\n\n</blockquote></details></p>\n\nb) Update your tibble from Question 1 to add a new column that contains the number of world-records each athlete holds.\n\n<p><details><summary>Hint</summary><blockquote>\nThe output should look something like this:\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 20 × 7\n   meters group seconds athlete               nation          year records\n    <dbl> <chr>   <dbl> <chr>                 <chr>          <dbl>   <int>\n 1    100 men      9.58 Usain Bolt            Jamaica         2009       2\n 2    100 women   10.5  Florence Joyner       United States   1988       2\n 3    200 men     19.2  Usain Bolt            Jamaica         2009       2\n 4    200 women   21.3  Florence Joyner       United States   1988       2\n 5    400 men     43.0  Wayde van Niekerk     South Africa    2016       1\n 6    400 women   47.6  Marita Koch           East Germany    1985       1\n 7    800 men    101.   David Rudisha         Kenya           2012       1\n 8    800 women  113.   Jarmila Kratochvilova Czechoslovakia  1983       1\n 9   1000 men    132.   Noah Ngeny            Kenya           1999       1\n10   1000 women  149.   Svetlana Masterkova   Russia          1996       1\n11   1500 men    206    Hicham El Guerrouj    Morocco         1998       2\n12   1500 women  230.   Genzebe Dibaba        Ethiopia        2015       2\n13   2000 men    285.   Hicham El Guerrouj    Morocco         1999       2\n14   2000 women  324.   Genzebe Dibaba        Ethiopia        2017       2\n15   3000 men    441.   Daniel Komen          Kenya           1996       1\n16   3000 women  486.   Wang Junxia           China           1993       1\n17   5000 men    757.   Kenenisa Bekele       Ethiopia        2004       2\n18   5000 women  851.   Tirunesh Dibaba       Ethiopia        2008       1\n19  10000 men   1578.   Kenenisa Bekele       Ethiopia        2005       2\n20  10000 women 1757.   Almaz Ayana           Ethiopia        2016       1\n```\n:::\n:::\n\n\n</blockquote></details></p>\n\n\n## Question 4\n\na) Help me fix my code! I want to extract a subset of variables using tidy selection and then use `across()` to apply the `sqrt()` function to several of them.\n\n\n::: {.cell renv.ignore='true'}\n\n```{.r .cell-code}\ndiamonds |> \n  select(is.numeric()) |> \n  mutate(across(x, y, z), sqrt)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in `select()`:\nCaused by error in `is.numeric()`:\n! 0 arguments passed to 'is.numeric' which requires 1\n```\n:::\n:::\n\n\n\nb) Help me fix my code! I want to create a new summary table that contains the median and maximum number of monthly listing for each city. But I'm getting some weird thing back...\n\n\n::: {.cell renv.ignore='true'}\n\n```{.r .cell-code}\ntxhousing |> \n  summary(\n    mdn_listings = median(listings, na.rm = TRUE),\n    max_listings = max(listings, na.rm = TRUE),\n    by = city\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     city                year          month            sales       \n Length:8602        Min.   :2000   Min.   : 1.000   Min.   :   6.0  \n Class :character   1st Qu.:2003   1st Qu.: 3.000   1st Qu.:  86.0  \n Mode  :character   Median :2007   Median : 6.000   Median : 169.0  \n                    Mean   :2007   Mean   : 6.406   Mean   : 549.6  \n                    3rd Qu.:2011   3rd Qu.: 9.000   3rd Qu.: 467.0  \n                    Max.   :2015   Max.   :12.000   Max.   :8945.0  \n                                                    NA's   :568     \n     volume              median          listings       inventory     \n Min.   :8.350e+05   Min.   : 50000   Min.   :    0   Min.   : 0.000  \n 1st Qu.:1.084e+07   1st Qu.:100000   1st Qu.:  682   1st Qu.: 4.900  \n Median :2.299e+07   Median :123800   Median : 1283   Median : 6.200  \n Mean   :1.069e+08   Mean   :128131   Mean   : 3217   Mean   : 7.175  \n 3rd Qu.:7.512e+07   3rd Qu.:150000   3rd Qu.: 2954   3rd Qu.: 8.150  \n Max.   :2.568e+09   Max.   :304200   Max.   :43107   Max.   :55.900  \n NA's   :568         NA's   :616      NA's   :1424    NA's   :1467    \n      date     \n Min.   :2000  \n 1st Qu.:2004  \n Median :2008  \n Mean   :2008  \n 3rd Qu.:2012  \n Max.   :2016  \n               \n```\n:::\n:::\n\n\n\n## Question 5\n\na) Load the `penguins` tibble from the \\{palmerpenguins\\} package. Use `across()` to round all variables with names that end in \"_mm\" to 0 digits (the default). Save the output as `penguins2` so you can use it again.\n\nb) Now use an approach we discussed in class to add a new column to the `penguins2` tibble that contains the mean of these rounded variables for each penguin (removing any missing values).\n\n\n\n## Question 6\n\nHow do the following four operations differ: ungrouped mutate, ungrouped summarize, grouped mutate, grouped summarize? Give a brief example of a time when each would be useful.\n\n\n---\n\n✅ Done! *Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important).*\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}