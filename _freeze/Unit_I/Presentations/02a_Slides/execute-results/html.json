{
  "hash": "b76a3d458b367d529d824d7887b703bc",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    css: ../../styles.css\n    slide-number: true\n    show-slide-number: all\n    progress: true\n    history: true\n    hash-type: number\n    theme: default\n    code-block-background: true\n    highlight-style: zenburn\n    code-link: false\n    code-copy: true\n    pagetitle: \"Foundations of Data Science\"\n    author-meta: \"Jeffrey Girard\"\n    date-meta: \"2023-01-23\"\n    semester: \"Spring 2023\"\n    course: \"399/800\"\n    lecture: \"02a\"\n---\n\n\n::: {.my-title}\n# [Foundations of]{.my-subtitle}<br />[Data Science]{.blue}\n\n::: {.my-grey}\n[{{< meta semester >}} | Course {{< meta course >}}]{}<br />\n[Jeffrey M. Girard | Lecture {{< meta lecture >}}]{}\n:::\n\n![](../../img/proud_coder_357EDD.svg){.absolute bottom=0 right=0 width=400}\n:::\n\n## Roadmap: Meeting R\n\n::: {.columns .pv4}\n\n::: {.column width=\"60%\"}\n1. R and RStudio\n  \n2. Console\n\n3. Scripts\n\n4. Activity\n:::\n\n::: {.column .tc .pv4 width=\"40%\"}\n\n{{< li xtkehzkm trigger=loop delay=5000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n\n:::\n\n\n# R and RStudio\n\n## Programming is a Superpower\n\n::: {.columns .pv4}\n\n::: {.column width=\"60%\"}\n- Programming is how we talk to and control our amazing computers\n\n- It gives us power and flexibility\n\n- Everything we do in this course will be accomplished via programming\n\n- Programming will leave a record of what we did (i.e., code), so we can later reuse, adapt, and share it\n:::\n\n::: {.column .tc .pv4 width=\"40%\"}\n\n{{< li ifswbdwv trigger=loop delay=5000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n\n:::\n\n\n## Common Data Science Languages {.smaller}\n\n#### General Purpose\n\n- [R]{.b .blue} (interactive, welcoming)\n    - *Strengths:* statistics, data wrangling, data visualization\n    - *Weaknesses:* relatively slow, not security-focused\n\n::: {.fragment}\n- [Python]{.b .blue} (popular, versatile)\n    - *Strengths:* automation, machine learning, data wrangling\n    - *Weaknesses:* relatively slow\n:::  \n  \n::: {.fragment}\n- [Java]{.b .green} / [C++]{.b .green} / [Scala]{.b .green} / [Julia]{.b .green} (faster but older and harder or newer and smaller)\n:::\n\n::: {.fragment}\n#### Special Purpose\n\n- JavaScript (web), SQL (databases), Swift (mobile), MATLAB (neuroscience), etc.\n:::\n\n\n## The R Ecosystem {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n1.  Think of your [computer]{.b .blue} as the [engine]{.b .green} of a car\n    -   It provides raw power for computation\n\n::: {.fragment .mt1}\n2.  The [R language]{.b .blue} is like the [controls]{.b .green} for the car\n    -   It lets you apply and direct that power\n:::\n\n::: {.fragment .mt1}\n3.  [RStudio]{.b .blue} is like a fancy [dashboard]{.b .green} for the car\n    -   It adds extra information and convenience\n:::\n\n::: {.fragment .mt1}\n4.  An [R package]{.b .blue} is like an [add-on]{.b .green} for the car\n    -   It adds new features and capabilities\n:::\n:::\n\n::: {.column .tc .pv5 .relative width=\"40%\"}\n\n{{< li zvoyghpz trigger=loop delay=5000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n\n## Installing R {.smaller}\n\n::: {.columns .pv4}\n::: {.column .pr4 width=\"50%\"}\n#### Windows\n\n1.  Open a web browser\n2.  Visit [cloud.r-project.org](https://cloud.r-project.org)\n3.  Click \"Download R for Windows\"\n4.  Click the \"base\" subdirectory link\n5.  Click \"Download R-4.X.X\" (e.g., 4.2.2)\n6.  Run the downloaded .exe file\n7.  Select all the default options\n8.  Complete the installation wizard\n:::\n\n::: {.column width=\"50%\"}\n#### Mac OS\n\n1.  Open a web browser\n2.  Visit [cloud.r-project.org](https://cloud.r-project.org)\n3.  Click \"Download R for macOS\"\n4.  Click \"R-4.X.X.pkg\" (e.g., 4.2.2)\n5.  Run the downloaded .pkg file\n6.  Select all the default options\n7.  Complete the installation wizard\n:::\n:::\n\n::: aside\n*Note.* You will need to repeat this process every time a new version of R is released (every 4–5 months).\n:::\n\n\n## Installing RStudio {.smaller}\n\n::: {.columns .pv4}\n::: {.column .pr4 width=\"50%\"}\n#### Windows\n\n1.  Open a web browser\n2.  Visit [rstudio.com/download](https://www.rstudio.com/products/rstudio/download/){preview-link=\"false\"}\n3.  Scroll down until you find the table under the \"**All Installers**\" section\n4.  Find the row for \"Windows 10/11\"\n5.  Click \"RStudio-2022.XX.X-XXX.exe\"\n6.  Run the downloaded .exe file\n7.  Select all the default options\n8.  Complete the installation wizard\n:::\n\n::: {.column width=\"50%\"}\n#### Mac OS\n\n1.  Open a web browser\n2.  Visit [rstudio.com/download](https://www.rstudio.com/products/rstudio/download/){preview-link=\"false\"}\n3.  Scroll down until you find the table under the \"**All Installers**\" section\n4.  Find the row for \"macOS 10.15+\"\n5.  Click \"RStudio-2022.XX.X-XXX.dmg\"\n6.  Run the downloaded .dmg file\n7.  Drag the RStudio icon to your Applications folder (if you want)\n:::\n:::\n\n::: aside\n*Note.* You will need to repeat this process every time a new version of RStudio is released (every 2–4 months).\n:::\n\n\n## RStudio Window {.smaller}\n\n![](../../img/rstudio_labels.jpg)\n\n\n::: aside\n*Note.* You can customize RStudio (e.g., the fonts, color themes, and pane layout) under \"Tools \\> Global Options\".\n:::\n\n\n# Console\n\n## R will Grant your Wishes {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   R is like a [well-meaning]{.b .green} but [overly literal]{.b .green} genie\n\n    -   It has the power to grant almost any wish\n    -   But we must phrase our wishes carefully!\n    -   *We will always get what we ask for...*\n    -   *...but not always what we wanted.*\n\n::: {.fragment .mt1}\n-   Mastering the [R language]{.b .blue} means learning...\n\n    -   How to properly phrase commands\n    -   How to decipher error messages\n    -   How to view code from R's perspective\n    -   How to detect and correct small mistakes\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li njhpxsof trigger=loop delay=5000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n\n## Communicating with R {.smaller}\n\n::: {.columns .pv4}\n::: {.column width=\"60%\"}\n-   The [Console]{.b .blue} is like a [chat window]{.b .green} with R\n    -   You send a command to R and get a response\n    -   Neither side of the conversation is saved\n\n::: {.fragment .mt1}\n-   An [R Script]{.b .blue} is like an [email thread]{.b .green} with R\n    -   You send many commands to R all at once\n    -   Only your side of the conversation is saved\n:::\n\n::: {.fragment .mt1}\n-   A [Quarto Document]{.b .blue} is like a [scrapbook]{.b .green} with R\n    -   You can combine code and formatted text\n    -   Both sides of the conversation are saved\n:::\n:::\n\n::: {.column .tc .pv5 width=\"40%\"}\n\n{{< li zpxybbhl trigger=loop delay=5000 colors=secondary:#2a76dd class=rc >}}\n\n\n:::\n:::\n\n\n## Console Live Coding\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Addition\n\n10+3\n10 + 3 # spaces are optional but recommended\n\n\n# Subtraction\n\n10 - 3\n\n\n# Multiplication\n\n10 * 3 # correct\n10 x 3 # error\n\n\n# Division\n\n10 / 3 # correct\n10 \\ 3 # error\n\n\n# Exponentiation\n\n10 ^ 2\n\n\n# Order of Operations\n\n10 + 3 * 2\n(10 + 3) * 2\n\n\n# Negative Numbers\n\n10 + -30\n\n\n# Decimals and Fractions\n\n1.234\n(1 / 3)\n\n\n# Leading and Trailing Zeros\n\n09.870\n\n\n# Large Numbers\n\n9876543 # correct\n9,876,543 # error\n9 876 543 # error\n```\n:::\n\n\n# Scripts\n\n## Script Live Coding\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\n# Creating a new script\n\n## Option 1: File > New File > R Script\n## Option 2: Top bar: white square with green plus icon\n## Option 3: Ctrl+Shift+N (Win) Cmd+Shift+N (Mac)\n## A new pane will be added to the RStudio window called the Source Editor\n\n\n# Entering commands into script\n\n## In the Source Editor, we can add many lines of code to a script\n## This allows for longer and more complex operations\n## Think of it like drafting an email with many instructions\n(1.4 + 2.8 + 9.3) / 3\n30.1 - 24.7\n\n\n# Running one line of code\n\n## Hitting Enter (Win) or Return (Mac) does not run the code\n## We can run one line of code at a time to see its results in console\n## Option 1: With cursor on a line, click the Run button (top-right)\n## Option 2: With cursor on a line, Ctrl+Enter (Win) or Cmd+Return (Mac)\n\n\n# Running many lines of code\n\n## We can run multiple lines of code at once to see results in console\n## Option 1: Highlight lines with mouse, click the Run button (top-right)\n## Option 2: Highlight lines with mouse, Ctrl+Enter (Win) or Cmd+Return (Mac)\n## We can even run all lines of code in a script at once\n## Option 1: Click the Source button (top-right)\n## Option 2: Ctrl+Shift+Enter (Win) or Cmd+Shift+Return (Mac)\n\n\n# Adding comments to scripts\n\n## To help communicate the purpose of our code, we can add comments\n## Comments will be ignored by R and are only there for human readers\n## We always start a comment in an R script with a hash symbol: #\n## I have been using comments in this very section you are reading!\n\n# Calculate the average score on the quiz\n(1.4 + 2.8 + 9.3) / 3\n\n# Calculate the difference between exam 1 and exam 2\n30.1 - 24.7\n\n100 / 9 # we can even have comments at the end of line (start will still run)\n\n\n# Saving the script file\n\n## Option 1: File > Save\n## Option 2: Source bar: blue and white disk icon\n## Option 3: Ctrl+S (Win) Cmd+S (Mac)\n## For now, save it wherever; we'll learn about Projects in [02b]\n## You will now have a .R file that you can keep and/or transfer\n## Only the code/input is saved in the script, not the results/output\n```\n:::\n",
    "supporting": [
      "02a_Slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}