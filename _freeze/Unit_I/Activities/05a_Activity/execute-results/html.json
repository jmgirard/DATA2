{
  "hash": "a9ef18b6d983e515d7d9594a1be83127",
  "result": {
    "markdown": "---\ntitle: \"Lecture [05a] Activity\"\n---\n\n\n![](../../img/programmer_2780E3.svg){.hero}\n\n## Question 1\n\nFor each of the following code snippets, find and fix the error(s).\n\na) \"The Scatterbrained Scatterplot\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, x = displ, y = hwy) + \n  geom_point()\n```\n:::\n\n\nb) \"Not-so-smooth Smoothing\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point()\n  geom_smooth(shape = \"triangle\")\n```\n:::\n\n\nc) \"A Leaky Pipeline\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(economics, aes(x = date, y = unemploy)) |> \n  geom_point()\n```\n:::\n\n\n<p><details>\n<summary>Click here for the answer key</summary>\n<blockquote>\n\n**Part (a)**\n\nThe code forgot to put the mappings inside `aes()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() \n```\n\n::: {.cell-output-display}\n![](05a_Activity_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n**Part (b)**\n\nThe code tried to set the shape aesthetic for the wrong geom (smooths don't have shapes).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(shape = \"triangle\") +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](05a_Activity_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n**Part (c)**\n\nThe code used pipes instead of plus signs to connect ggplot2 commands.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(economics, aes(x = date, y = unemploy)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](05a_Activity_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n</blockquote></details></p>\n\n\n## Question 2\n\na) Install and load the \\{palmerpenguins\\} package.\n\nb) Recreate the following graphic as closely as you can from the `penguins` tibble in that package (don't worry about getting the point size exactly right).\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](05a_Activity_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n<p><details>\n<summary>Click here for the answer key</summary>\n<blockquote>\n\n**Answer (a)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Extra pane > Packages tab > Install button > palmerpenguins > Install\n# Or, in console: install.packages(palmerpenguins)\n\nlibrary(palmerpenguins)\n```\n:::\n\n\n**Answer (b)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm,\n                     color = species, shape = species)) +\n  geom_point(size = 2)\n```\n\n::: {.cell-output-display}\n![](05a_Activity_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n</blockquote>\n</details></p>\n\n\n## Question 3\n\nCreate a plot from the following text description. Take the `penguins` dataset (from Question 2) and create a scatterplot where penguins with higher body mass are further to the right on the plot and penguins with higher bill depth are higher on the plot. Color each point based on which island that penguin was observed at and add a smoothing line to show the relationship between body mass and bill depth for each island.\n\n<p><details>\n<summary>Click here for the answer key</summary>\n<blockquote>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = body_mass_g, y = bill_depth_mm, color = island)) + \n  geom_point() +\n  geom_smooth()\n```\n\n::: {.cell-output-display}\n![](05a_Activity_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n</blockquote></details></p>\n\n\n## Fun Stuff\n\nWould these jokes be more or less funny if he had used \\{ggplot2\\}?\n\n\n{{< video https://www.youtube.com/embed/LYE3GtXqDV0 >}}\n\n\n\n\n---\n\n*Note that there is no need to turn in Activities. These are just for practice!*\n",
    "supporting": [
      "05a_Activity_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}