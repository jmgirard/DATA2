[
  {
    "objectID": "Unit_II/week_14.html",
    "href": "Unit_II/week_14.html",
    "title": "Week 14: Showcase",
    "section": "",
    "text": "Dr. Girard will present on advanced Quarto, GitHub, command line interfaces, and Shiny web development."
  },
  {
    "objectID": "Unit_II/week_14.html#a-showcase",
    "href": "Unit_II/week_14.html#a-showcase",
    "title": "Week 14: Showcase",
    "section": "",
    "text": "Dr. Girard will present on advanced Quarto, GitHub, command line interfaces, and Shiny web development."
  },
  {
    "objectID": "Unit_II/week_14.html#b-showcase",
    "href": "Unit_II/week_14.html#b-showcase",
    "title": "Week 14: Showcase",
    "section": "[14b] Showcase",
    "text": "[14b] Showcase\nTA James Adaryukov will present on text as data."
  },
  {
    "objectID": "Unit_II/week_14.html#week-14-assignment",
    "href": "Unit_II/week_14.html#week-14-assignment",
    "title": "Week 14: Showcase",
    "section": "Week 14 Assignment",
    "text": "Week 14 Assignment\n\nInstructions\n\nWeek 14 Assignment"
  },
  {
    "objectID": "Unit_II/week_12.html",
    "href": "Unit_II/week_12.html",
    "title": "Week 12: Visualize",
    "section": "",
    "text": "Faceting\nPositions\nStat Summary\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [12a]"
  },
  {
    "objectID": "Unit_II/week_12.html#a-advanced-elements",
    "href": "Unit_II/week_12.html#a-advanced-elements",
    "title": "Week 12: Visualize",
    "section": "",
    "text": "Faceting\nPositions\nStat Summary\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [12a]"
  },
  {
    "objectID": "Unit_II/week_12.html#b-advanced-elements",
    "href": "Unit_II/week_12.html#b-advanced-elements",
    "title": "Week 12: Visualize",
    "section": "[12b] Advanced Elements",
    "text": "[12b] Advanced Elements\n\nTopics\n\nHighlighting\nLayouts\nExporting\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nActivity\n\nActivity [12b]"
  },
  {
    "objectID": "Unit_II/week_12.html#week-12-assignment",
    "href": "Unit_II/week_12.html#week-12-assignment",
    "title": "Week 12: Visualize",
    "section": "Week 12 Assignment",
    "text": "Week 12 Assignment\n\nInstructions\n\nWeek 12 Assignment"
  },
  {
    "objectID": "Unit_II/week_10.html",
    "href": "Unit_II/week_10.html",
    "title": "Week 10: Wrangle",
    "section": "",
    "text": "Summarize\nGrouped Summarize\nGrouped Mutate\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [10a]\n\n\n\n\n\nhttps://r4ds.had.co.nz/transform.html#grouped-summaries-with-summarise"
  },
  {
    "objectID": "Unit_II/week_10.html#a-summarization",
    "href": "Unit_II/week_10.html#a-summarization",
    "title": "Week 10: Wrangle",
    "section": "",
    "text": "Summarize\nGrouped Summarize\nGrouped Mutate\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [10a]\n\n\n\n\n\nhttps://r4ds.had.co.nz/transform.html#grouped-summaries-with-summarise"
  },
  {
    "objectID": "Unit_II/week_10.html#b-convenience",
    "href": "Unit_II/week_10.html#b-convenience",
    "title": "Week 10: Wrangle",
    "section": "[10b] Convenience",
    "text": "[10b] Convenience\n\nTopics\n\nTidy Selection\nAcross\nScale Scores\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nActivity\n\nActivity [10b]\n\n\n\nOptional Readings\n\nhttps://tidyselect.r-lib.org/reference/language.html\nhttps://dplyr.tidyverse.org/articles/colwise.html\nhttps://dplyr.tidyverse.org/articles/rowwise.html"
  },
  {
    "objectID": "Unit_II/week_10.html#week-10-assignment",
    "href": "Unit_II/week_10.html#week-10-assignment",
    "title": "Week 10: Wrangle",
    "section": "Week 10 Assignment",
    "text": "Week 10 Assignment\n\nInstructions\n\nWeek 10 Assignment\n\n\n\nData Files\n\nrecords.csv"
  },
  {
    "objectID": "Unit_II/Assignments/14_Assignment.html#instructions",
    "href": "Unit_II/Assignments/14_Assignment.html#instructions",
    "title": "Week 14 Assignment",
    "section": "Instructions",
    "text": "Instructions\nWrite a short essay answering each of the three questions below. Submit your answers on Canvas (as a text file, Word document, Quarto document, etc.)."
  },
  {
    "objectID": "Unit_II/Assignments/14_Assignment.html#question-1",
    "href": "Unit_II/Assignments/14_Assignment.html#question-1",
    "title": "Week 14 Assignment",
    "section": "Question 1",
    "text": "Question 1\nOne challenging aspect of learning new skills is retaining them over time. You have just invested three months of hard work into acquiring these skills and it will require motivation and sustained practice/use to keep this momentum going. List one or more possible benefits (e.g., to your career or person) of investing in retaining these skills, list one or more challenges that might get in the way of you retaining these skills, and list one or more strategies you could use to overcome these challenges. Note that you can get full credit for providing one of each, but you are welcome to expand beyond this if you think it would be worthwhile."
  },
  {
    "objectID": "Unit_II/Assignments/14_Assignment.html#question-2",
    "href": "Unit_II/Assignments/14_Assignment.html#question-2",
    "title": "Week 14 Assignment",
    "section": "Question 2",
    "text": "Question 2\nThe material in this class is just the tip of the iceberg (i.e., the beginning) in terms of what can be learned about programming, wrangling, visualization, and other data science topics. List two topics (e.g., ideas/concepts or skills/tools) that you would like to learn more about and describe why they interest you. Then lay out a plan for how you might learn about these topics (e.g., sources of information, potential challenges, and potential solutions)."
  },
  {
    "objectID": "Unit_II/Assignments/14_Assignment.html#question-3",
    "href": "Unit_II/Assignments/14_Assignment.html#question-3",
    "title": "Week 14 Assignment",
    "section": "Question 3",
    "text": "Question 3\nFind a video from one of the following playlists to watch that you find interesting (and is 10+ minutes in duration). Include the link to your selected video in your answer. Then write several sentences summarizing what you learned from the video and how you might use that new knowledge in your Unit II Project and/or in your data science adventures beyond this course.\nPosit Conference Talks: https://www.youtube.com/playlist?list=PL9HYL-VRX0oTw-6TQri7Fr97G3IX0tHh8\nPosit Demos + Tutorials: https://www.youtube.com/playlist?list=PL9HYL-VRX0oTOK4cpbCbRk15K2roEgzVW"
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#instructions",
    "href": "Unit_II/Assignments/12_Assignment.html#instructions",
    "title": "Week 12 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#question-1",
    "href": "Unit_II/Assignments/12_Assignment.html#question-1",
    "title": "Week 12 Assignment",
    "section": "Question 1",
    "text": "Question 1\nRecreate the figure below from the txhousing dataset (included in {tidyverse}). Hint: You will need to filter the dataset to only include those three cities shown below."
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#question-2",
    "href": "Unit_II/Assignments/12_Assignment.html#question-2",
    "title": "Week 12 Assignment",
    "section": "Question 2",
    "text": "Question 2\n\nFilter the starwars dataset to only include characters from the “Droid”, “Human”, and “Twi’lek” species.\nPlot this filtered dataset using a dodged bar chart that counts the number of characters from each species in each gender. Which of these three species was the most balanced in terms of gender?"
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#question-3",
    "href": "Unit_II/Assignments/12_Assignment.html#question-3",
    "title": "Week 12 Assignment",
    "section": "Question 3",
    "text": "Question 3\nI am interested in the amount of poverty in the midwestern US states. Relevant data is stored in the midwest dataset (comes in the {tidyverse} package). Use the stat_summary() function to plot the mean and 95% confidence interval of the percbelowpoverty variable in each state using a “pointrange” geom.\n\n\n\nHint\n\n\nYour plot should look something like this:\n\n\nWarning: Computation failed in `stat_summary()`\nCaused by error in `fun.data()`:\n! The package \"Hmisc\" is required."
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#question-4",
    "href": "Unit_II/Assignments/12_Assignment.html#question-4",
    "title": "Week 12 Assignment",
    "section": "Question 4",
    "text": "Question 4\nCompare these three representations of the same data. Describe, in text, how was each made (e.g., what functions were used). What are the pros and cons of each and which is your favorite?"
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#question-5",
    "href": "Unit_II/Assignments/12_Assignment.html#question-5",
    "title": "Week 12 Assignment",
    "section": "Question 5",
    "text": "Question 5\nImagine that you have ggplot objects called A, B, C, D, and E. Provide the {patchwork} command you could use to create the layout shown below. Optionally, create five different plots (even if they only differ slightly) and test this out.\n\n\n\n\nHint\n\n\nThis is probably easier to achieve with +, |, and / than with plot_layout()."
  },
  {
    "objectID": "Unit_II/Assignments/12_Assignment.html#question-6",
    "href": "Unit_II/Assignments/12_Assignment.html#question-6",
    "title": "Week 12 Assignment",
    "section": "Question 6",
    "text": "Question 6\nYour friend just got a paper accepted in a journal that has a lot of rules about what figures can look like. They already has two ggplot objects called first_fig and second_fig that contain her two figures. Explain to them how to export these objects to files that meets all the publisher’s rules. For maximal clarity, provide code they can use.\nRule 1: All axis titles must be in italics.\nRule 2: All figures must be exactly 88 mm wide and no taller than 234 mm.\nRule 3: All figures must be separate files named fig_X (where X is a whole number representing the order in which the figure appears in the paper such as fig_1 or fig_2).\nRule 4: All figures must be saved in a vector format.\n\n\n\nHint\n\n\nFor Rule 1, use themes (discussed in Unit I). For the other rules, use your best judgment, as they may have several acceptable solutions.\n\n\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#instructions",
    "href": "Unit_II/Assignments/10_Assignment.html#instructions",
    "title": "Week 10 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#question-1",
    "href": "Unit_II/Assignments/10_Assignment.html#question-1",
    "title": "Week 10 Assignment",
    "section": "Question 1",
    "text": "Question 1\n\nDownload the records.csv file from Canvas, put it in your project folder, and import it into R. Examine the tibble to familiarize yourself with it; it contains world records for several running events (as of October 2020).\nAdd a new variable to the tibble called kmph that contains the average speed attained in each record in kilometers per hour (you will need to calculate this from existing variables - be careful about units). Save this change so that you can use this new variable in future questions."
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#question-2",
    "href": "Unit_II/Assignments/10_Assignment.html#question-2",
    "title": "Week 10 Assignment",
    "section": "Question 2",
    "text": "Question 2\n\nCreate a summary table using your data from Question 1 that contains the minimum, mean, and maximum speeds (in kmph).\nCreate a summary table using your data from Question 1 that contains the minimum time (in seconds) and maximum speed (in kmph) for each distance (in meters)."
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#question-3",
    "href": "Unit_II/Assignments/10_Assignment.html#question-3",
    "title": "Week 10 Assignment",
    "section": "Question 3",
    "text": "Question 3\n\nCreate a summary table using your data from Question 1 that counts the number of running world records each nation held and the number of distinct world-record-holding runners it had produced (as of 2020).\n\n\n\n\nHint\n\n\nThe output should look something like this:\n\n\n# A tibble: 10 × 3\n   nation         records runners\n   &lt;chr&gt;            &lt;int&gt;   &lt;int&gt;\n 1 Jamaica              2       1\n 2 United States        2       1\n 3 South Africa         1       1\n 4 East Germany         1       1\n 5 Kenya                3       3\n 6 Czechoslovakia       1       1\n 7 Russia               1       1\n 8 Morocco              2       1\n 9 Ethiopia             6       4\n10 China                1       1\n\n\n\n\n\n\nUpdate your tibble from Question 1 to add a new column that contains the number of world-records each athlete holds.\n\n\n\n\nHint\n\n\nThe output should look something like this:\n\n\n# A tibble: 20 × 7\n   meters group seconds athlete               nation          year records\n    &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;                 &lt;chr&gt;          &lt;dbl&gt;   &lt;int&gt;\n 1    100 men      9.58 Usain Bolt            Jamaica         2009       2\n 2    100 women   10.5  Florence Joyner       United States   1988       2\n 3    200 men     19.2  Usain Bolt            Jamaica         2009       2\n 4    200 women   21.3  Florence Joyner       United States   1988       2\n 5    400 men     43.0  Wayde van Niekerk     South Africa    2016       1\n 6    400 women   47.6  Marita Koch           East Germany    1985       1\n 7    800 men    101.   David Rudisha         Kenya           2012       1\n 8    800 women  113.   Jarmila Kratochvilova Czechoslovakia  1983       1\n 9   1000 men    132.   Noah Ngeny            Kenya           1999       1\n10   1000 women  149.   Svetlana Masterkova   Russia          1996       1\n11   1500 men    206    Hicham El Guerrouj    Morocco         1998       2\n12   1500 women  230.   Genzebe Dibaba        Ethiopia        2015       2\n13   2000 men    285.   Hicham El Guerrouj    Morocco         1999       2\n14   2000 women  324.   Genzebe Dibaba        Ethiopia        2017       2\n15   3000 men    441.   Daniel Komen          Kenya           1996       1\n16   3000 women  486.   Wang Junxia           China           1993       1\n17   5000 men    757.   Kenenisa Bekele       Ethiopia        2004       2\n18   5000 women  851.   Tirunesh Dibaba       Ethiopia        2008       1\n19  10000 men   1578.   Kenenisa Bekele       Ethiopia        2005       2\n20  10000 women 1757.   Almaz Ayana           Ethiopia        2016       1"
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#question-4",
    "href": "Unit_II/Assignments/10_Assignment.html#question-4",
    "title": "Week 10 Assignment",
    "section": "Question 4",
    "text": "Question 4\n\nHelp me fix my code! I want to extract a subset of variables using tidy selection and then use across() to apply the sqrt() function to several of them.\n\n\ndiamonds |&gt; \n  select(is.numeric()) |&gt; \n  mutate(across(x, y, z), sqrt)\n\nError in `select()` at dplyr/R/mutate.R:146:2:\nCaused by error in `is.numeric()`:\n! 0 arguments passed to 'is.numeric' which requires 1\n\n\n\nHelp me fix my code! I want to create a new summary table that contains the median and maximum number of monthly listing for each city. But I’m getting some weird thing back…\n\n\ntxhousing |&gt; \n  summary(\n    mdn_listings = median(listings, na.rm = TRUE),\n    max_listings = max(listings, na.rm = TRUE),\n    by = city\n  )\n\n     city                year          month            sales       \n Length:8602        Min.   :2000   Min.   : 1.000   Min.   :   6.0  \n Class :character   1st Qu.:2003   1st Qu.: 3.000   1st Qu.:  86.0  \n Mode  :character   Median :2007   Median : 6.000   Median : 169.0  \n                    Mean   :2007   Mean   : 6.406   Mean   : 549.6  \n                    3rd Qu.:2011   3rd Qu.: 9.000   3rd Qu.: 467.0  \n                    Max.   :2015   Max.   :12.000   Max.   :8945.0  \n                                                    NA's   :568     \n     volume              median          listings       inventory     \n Min.   :8.350e+05   Min.   : 50000   Min.   :    0   Min.   : 0.000  \n 1st Qu.:1.084e+07   1st Qu.:100000   1st Qu.:  682   1st Qu.: 4.900  \n Median :2.299e+07   Median :123800   Median : 1283   Median : 6.200  \n Mean   :1.069e+08   Mean   :128131   Mean   : 3217   Mean   : 7.175  \n 3rd Qu.:7.512e+07   3rd Qu.:150000   3rd Qu.: 2954   3rd Qu.: 8.150  \n Max.   :2.568e+09   Max.   :304200   Max.   :43107   Max.   :55.900  \n NA's   :568         NA's   :616      NA's   :1424    NA's   :1467    \n      date     \n Min.   :2000  \n 1st Qu.:2004  \n Median :2008  \n Mean   :2008  \n 3rd Qu.:2012  \n Max.   :2016"
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#question-5",
    "href": "Unit_II/Assignments/10_Assignment.html#question-5",
    "title": "Week 10 Assignment",
    "section": "Question 5",
    "text": "Question 5\n\nLoad the penguins tibble from the {palmerpenguins} package. Use across() to round all variables with names that end in “_mm” to 0 digits (the default). Save the output as penguins2 so you can use it again.\nNow use an approach we discussed in class to add a new column to the penguins2 tibble that contains the mean of these rounded variables for each penguin (removing any missing values)."
  },
  {
    "objectID": "Unit_II/Assignments/10_Assignment.html#question-6",
    "href": "Unit_II/Assignments/10_Assignment.html#question-6",
    "title": "Week 10 Assignment",
    "section": "Question 6",
    "text": "Question 6\nHow do the following four operations differ: ungrouped mutate, ungrouped summarize, grouped mutate, grouped summarize? Give a brief example of a time when each would be useful.\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_II/Activities/13a_Activity.html#question-1",
    "href": "Unit_II/Activities/13a_Activity.html#question-1",
    "title": "Lecture [13a] Activity",
    "section": "Question 1",
    "text": "Question 1\nMutate the following tibble to add a new column named username which combines the first letter of fname, a period, and then the first six letters of lname all in lowercase (such that the first username is “a.smith”).\n\nlibrary(tidyverse)\ndf &lt;- tibble(\n  fname = c(\"Ann\", \"Benjamin\", \"Charlotte\", \"Dennis\"),\n  lname = c(\"Smith\", \"Cooper\", \"Spelling\", \"Trakand\")\n)\n\n\n\n\nClick here for the answer key\n\n\n\ndf |&gt; \n  mutate(\n    username = str_to_lower(\n      str_c(\n        str_sub(fname, start = 1, end = 1), \n        str_sub(lname, start = 1, end = 6), \n        sep = \".\"\n      )\n    )\n  )\n\n# A tibble: 4 × 3\n  fname     lname    username\n  &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;   \n1 Ann       Smith    a.smith \n2 Benjamin  Cooper   b.cooper\n3 Charlotte Spelling c.spelli\n4 Dennis    Trakand  d.trakan"
  },
  {
    "objectID": "Unit_II/Activities/13a_Activity.html#question-2",
    "href": "Unit_II/Activities/13a_Activity.html#question-2",
    "title": "Lecture [13a] Activity",
    "section": "Question 2",
    "text": "Question 2\nStart with the mpg tibble (from {tidyverse}) and add a new variable called parent that collapses the levels of the manufacturer variable that are owned by the same parent company. Note that Volkswagen owns “volkswagen” and “audi”, GMC owns “chevrolet” and “pontiac”, Stellantis owns “dodge” and “jeep”, Tata owns “land rover”, and Ford owns “ford”, “lincoln”, and “mercury”. Finally, select the parent, manufacturer, and model variables.\n\n\n\nClick here for the answer key\n\n\n\nmpg |&gt; \n  mutate(\n    parent = fct_collapse(\n      manufacturer, \n      volkswagen = c(\"volkswagen\", \"audi\"),\n      gmc = c(\"chevrolet\", \"pontiac\"),\n      stellantis = c(\"dodge\", \"jeep\"),\n      tata = \"land rover\",\n      ford = c(\"ford\", \"lincoln\", \"mercury\")\n    )\n  ) |&gt; \n  select(parent, manufacturer, model)\n\n# A tibble: 234 × 3\n   parent     manufacturer model     \n   &lt;fct&gt;      &lt;chr&gt;        &lt;chr&gt;     \n 1 volkswagen audi         a4        \n 2 volkswagen audi         a4        \n 3 volkswagen audi         a4        \n 4 volkswagen audi         a4        \n 5 volkswagen audi         a4        \n 6 volkswagen audi         a4        \n 7 volkswagen audi         a4        \n 8 volkswagen audi         a4 quattro\n 9 volkswagen audi         a4 quattro\n10 volkswagen audi         a4 quattro\n# ℹ 224 more rows"
  },
  {
    "objectID": "Unit_II/Activities/13a_Activity.html#question-3",
    "href": "Unit_II/Activities/13a_Activity.html#question-3",
    "title": "Lecture [13a] Activity",
    "section": "Question 3",
    "text": "Question 3\nThe Wheel of Time book series spans fourteen novels. Imagine that I used webscraping to extract the publication dates of the first and last books in the series from Wikipedia and stored them in the following two strings.\n\nfirst_book_str &lt;- \"15 January 1990\"\nlast_book_str &lt;- \"January 8, 2013\"\n\nUse {lubridate} and these strings to calculate (a) the number of days and (b) the number of years between these two publication dates.\n\n\n\nClick here for the answer key\n\n\n\nfirst_book_date &lt;- dmy(first_book_str)\nlast_book_date &lt;- mdy(last_book_str)\n\n\n# Number of days\ninterval(first_book_date, last_book_date) / days(1)\n\n[1] 8394\n\n# Number of years\ninterval(first_book_date, last_book_date) / years(1)\n\n[1] 22.98087\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Activities/12a_Activity.html#question-1",
    "href": "Unit_II/Activities/12a_Activity.html#question-1",
    "title": "Lecture [12a] Activity",
    "section": "Question 1",
    "text": "Question 1\nCreate a ggplot from mpg that maps displ to x and hwy to y and includes a point geom. Facet the plot such that there are seven columns showing class levels and three rows showing drv levels.\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point() + \n  facet_grid(drv~class)"
  },
  {
    "objectID": "Unit_II/Activities/12a_Activity.html#question-2",
    "href": "Unit_II/Activities/12a_Activity.html#question-2",
    "title": "Lecture [12a] Activity",
    "section": "Question 2",
    "text": "Question 2\nCreate a stacked bar chart from mpg that shows the proportion of each class of car that uses each type of drive train (drv). Use this plot to answer: which class of car uses only front-wheel drive (i.e., \"f\") and which class of car is the most balanced in terms of using different types of drive trains? Hint: All bars should be the same height.\n\n\n\nClick here for the answer key\n\n\n\nmpg |&gt; \n  ggplot(aes(x = class, fill = drv)) + \n  geom_bar(position = \"fill\")\n\n\n\n\nAll minivans in this dataset use the front-wheel drive type of drive train, and the subcompact class is the most balanced."
  },
  {
    "objectID": "Unit_II/Activities/12a_Activity.html#question-3",
    "href": "Unit_II/Activities/12a_Activity.html#question-3",
    "title": "Lecture [12a] Activity",
    "section": "Question 3",
    "text": "Question 3\nCreate a ggplot from mpg that maps hwy to x and manufacturer to y; use stat_summary() to plot a pointrange geom for each manufacturer that puts the point at the median value and extends the range to the minimum and maximum values. Use this plot to answer: which two manufacturers exceeded 25 mpg highway fuel efficiency for all their cars in this dataset?\n\n\n\nClick here for the answer key\n\n\n\nmpg |&gt; \n  ggplot(aes(x = hwy, y = manufacturer)) +\n  stat_summary(\n    fun = median,\n    fun.min = min,\n    fun.max = max,\n    geom = \"pointrange\"\n  )\n\n\n\n# Hidden shortcut function :)\nmpg |&gt; \n  ggplot(aes(x = hwy, y = manufacturer)) +\n  stat_summary(\n    fun.data = median_hilow,\n    geom = \"pointrange\"\n  )\n\nWarning: Computation failed in `stat_summary()`\nCaused by error in `fun.data()`:\n! The package \"Hmisc\" is required.\n\n\n\n\n\nPontiac and Honda both had minimum hwy values (i.e., lower ranges) above 25."
  },
  {
    "objectID": "Unit_II/Activities/12a_Activity.html#challenge",
    "href": "Unit_II/Activities/12a_Activity.html#challenge",
    "title": "Lecture [12a] Activity",
    "section": "Challenge",
    "text": "Challenge\nRecreate the figure below from the economics tibble (included in {tidyverse}). Hint: This will require some reshaping as well as faceting.\n\n\n\n\n\n\n\n\nClick here for the answer key\n\n\n\neconomics |&gt; \n  pivot_longer(\n    pce:unemploy, \n    names_to = \"variable\", \n    values_to = \"value\"\n  ) |&gt; \n  ggplot(aes(x = date, y = value)) + \n  geom_line() +\n  facet_grid(variable~., scales = \"free_y\")\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Activities/11a_Activity.html#question-1",
    "href": "Unit_II/Activities/11a_Activity.html#question-1",
    "title": "Lecture [11a] Activity",
    "section": "Question 1",
    "text": "Question 1\nExamine the table5 tibble (included in {tidyverse}) and tidy it up using separate() and unite(). End with variables for country, four-digit year (YYYY), number of tuberculosis cases, and population.\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\ntable5 |&gt; \n  unite(\n    col = \"year\",\n    century, \n    year, \n    sep = \"\"\n  ) |&gt; \n  separate_wider_delim(\n    col = rate, \n    delim = \"/\",\n    names = c(\"cases\", \"population\")\n  )\n\n# A tibble: 6 × 4\n  country     year  cases  population\n  &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;     \n1 Afghanistan 1999  745    19987071  \n2 Afghanistan 2000  2666   20595360  \n3 Brazil      1999  37737  172006362 \n4 Brazil      2000  80488  174504898 \n5 China       1999  212258 1272915272\n6 China       2000  213766 1280428583"
  },
  {
    "objectID": "Unit_II/Activities/11a_Activity.html#question-2",
    "href": "Unit_II/Activities/11a_Activity.html#question-2",
    "title": "Lecture [11a] Activity",
    "section": "Question 2",
    "text": "Question 2\nReshape the billboard tibble (included in {tidyverse}) to a long format such that each row represents a single track’s ranking for a single week (variables: artist, track, date.entered, week, rank). For a challenge, remove the prefix from your final week variable and convert it into a numeric variable.\n\n\n\nClick here for the answer key\n\n\n\nbillboard |&gt; \n  pivot_longer(\n    cols = starts_with(\"wk\"), \n    names_to = \"week\", \n    values_to = \"rank\",\n    names_prefix = \"wk\", # Challenge\n    names_transform = parse_number # Challenge\n  )\n\n# A tibble: 24,092 × 5\n   artist track                   date.entered  week  rank\n   &lt;chr&gt;  &lt;chr&gt;                   &lt;date&gt;       &lt;dbl&gt; &lt;dbl&gt;\n 1 2 Pac  Baby Don't Cry (Keep... 2000-02-26       1    87\n 2 2 Pac  Baby Don't Cry (Keep... 2000-02-26       2    82\n 3 2 Pac  Baby Don't Cry (Keep... 2000-02-26       3    72\n 4 2 Pac  Baby Don't Cry (Keep... 2000-02-26       4    77\n 5 2 Pac  Baby Don't Cry (Keep... 2000-02-26       5    87\n 6 2 Pac  Baby Don't Cry (Keep... 2000-02-26       6    94\n 7 2 Pac  Baby Don't Cry (Keep... 2000-02-26       7    99\n 8 2 Pac  Baby Don't Cry (Keep... 2000-02-26       8    NA\n 9 2 Pac  Baby Don't Cry (Keep... 2000-02-26       9    NA\n10 2 Pac  Baby Don't Cry (Keep... 2000-02-26      10    NA\n# ℹ 24,082 more rows"
  },
  {
    "objectID": "Unit_II/Activities/11a_Activity.html#question-3",
    "href": "Unit_II/Activities/11a_Activity.html#question-3",
    "title": "Lecture [11a] Activity",
    "section": "Question 3",
    "text": "Question 3\nReshape the table2 tibble (included in {tidyverse}) so that each row represents a single country in a single year (Hint: variables should be country, year, cases, and population).\n\n\n\nClick here for the answer key\n\n\n\ntable2 |&gt; \n  pivot_wider(names_from = type, values_from = count)\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583"
  },
  {
    "objectID": "Unit_II/Activities/11a_Activity.html#optional-challenge",
    "href": "Unit_II/Activities/11a_Activity.html#optional-challenge",
    "title": "Lecture [11a] Activity",
    "section": "Optional Challenge",
    "text": "Optional Challenge\nReshape the us_rent_income tibble (included in {tidyverse}) so that each row represents a single US state (Hint: Variables should be something like: GEOID, NAME, estimate_income, estimate_rent, moe_income, and moe_rent)\n\n\n\nClick here for the answer key\n\n\n\nus_rent_income |&gt; \n  pivot_wider(\n    names_from = variable, \n    values_from = c(estimate, moe)\n  )\n\n# A tibble: 52 × 6\n   GEOID NAME                 estimate_income estimate_rent moe_income moe_rent\n   &lt;chr&gt; &lt;chr&gt;                          &lt;dbl&gt;         &lt;dbl&gt;      &lt;dbl&gt;    &lt;dbl&gt;\n 1 01    Alabama                        24476           747        136        3\n 2 02    Alaska                         32940          1200        508       13\n 3 04    Arizona                        27517           972        148        4\n 4 05    Arkansas                       23789           709        165        5\n 5 06    California                     29454          1358        109        3\n 6 08    Colorado                       32401          1125        109        5\n 7 09    Connecticut                    35326          1123        195        5\n 8 10    Delaware                       31560          1076        247       10\n 9 11    District of Columbia           43198          1424        681       17\n10 12    Florida                        25952          1077         70        3\n# ℹ 42 more rows\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Activities/10a_Activity.html#question-1-summarize",
    "href": "Unit_II/Activities/10a_Activity.html#question-1-summarize",
    "title": "Lecture [10a] Activity",
    "section": "Question 1 (Summarize)",
    "text": "Question 1 (Summarize)\nSummarize the txhousing tibble (included in {tidyverse}) to recreate the following tibble (where n_obs is the number of observations, n_cities is the number of unique/distinct cities, mdn_listings is the median number of monthly listings, max_listings is the maximum number of monthly listings). Ignore/remove any missing values when calculating the last two summary variables.\n\n\n# A tibble: 1 × 4\n  n_obs n_cities mdn_listings max_listings\n  &lt;int&gt;    &lt;int&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1  8602       46         1283        43107\n\n\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\ntxhousing |&gt; \n  summarize(\n    n_obs = n(),\n    n_cities = n_distinct(city),\n    mdn_listings = median(listings, na.rm = TRUE),\n    max_listings = max(listings, na.rm = TRUE)\n  )\n\n# A tibble: 1 × 4\n  n_obs n_cities mdn_listings max_listings\n  &lt;int&gt;    &lt;int&gt;        &lt;dbl&gt;        &lt;dbl&gt;\n1  8602       46         1283        43107"
  },
  {
    "objectID": "Unit_II/Activities/10a_Activity.html#question-2-grouped-summarize",
    "href": "Unit_II/Activities/10a_Activity.html#question-2-grouped-summarize",
    "title": "Lecture [10a] Activity",
    "section": "Question 2 (Grouped Summarize)",
    "text": "Question 2 (Grouped Summarize)\nSummarize the txhousing tibble to recreate the following tibble (where m_price is the mean of the median variable and s_price is the standard deviation of the median variable, both per city-year combination).\n\n\n# A tibble: 736 × 4\n   city     year m_price s_price\n   &lt;chr&gt;   &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Abilene  2000  66600    5714.\n 2 Abilene  2001  70975    6331.\n 3 Abilene  2002  68600    6756.\n 4 Abilene  2003  71933.   5598.\n 5 Abilene  2004  74867.   7892.\n 6 Abilene  2005  87592.  10139.\n 7 Abilene  2006 100292.   5187.\n 8 Abilene  2007 103650   10931.\n 9 Abilene  2008 107133.  10212.\n10 Abilene  2009 108367.   9850.\n# ℹ 726 more rows\n\n\n\n\n\nClick here for the answer key\n\n\n\ntxhousing |&gt; \n  summarize(\n    m_price = mean(median),\n    s_price = sd(median),\n    .by = c(city, year)\n  )\n\n# A tibble: 736 × 4\n   city     year m_price s_price\n   &lt;chr&gt;   &lt;int&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 Abilene  2000  66600    5714.\n 2 Abilene  2001  70975    6331.\n 3 Abilene  2002  68600    6756.\n 4 Abilene  2003  71933.   5598.\n 5 Abilene  2004  74867.   7892.\n 6 Abilene  2005  87592.  10139.\n 7 Abilene  2006 100292.   5187.\n 8 Abilene  2007 103650   10931.\n 9 Abilene  2008 107133.  10212.\n10 Abilene  2009 108367.   9850.\n# ℹ 726 more rows"
  },
  {
    "objectID": "Unit_II/Activities/10a_Activity.html#question-3-grouped-mutate",
    "href": "Unit_II/Activities/10a_Activity.html#question-3-grouped-mutate",
    "title": "Lecture [10a] Activity",
    "section": "Question 3 (Grouped Mutate)",
    "text": "Question 3 (Grouped Mutate)\nUse a grouped mutate to add a new variable to the txhousing tibble that shows the average number of sales for that city in that year. Select only the city, year, month, and sales variables, in addition to the newly created variable.\n\n\n# A tibble: 8,602 × 5\n   city     year month sales avg_sales\n   &lt;chr&gt;   &lt;int&gt; &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 Abilene  2000     1    72      115.\n 2 Abilene  2000     2    98      115.\n 3 Abilene  2000     3   130      115.\n 4 Abilene  2000     4    98      115.\n 5 Abilene  2000     5   141      115.\n 6 Abilene  2000     6   156      115.\n 7 Abilene  2000     7   152      115.\n 8 Abilene  2000     8   131      115.\n 9 Abilene  2000     9   104      115.\n10 Abilene  2000    10   101      115.\n# ℹ 8,592 more rows\n\n\n\n\n\nClick here for the answer key\n\n\n\ntxhousing |&gt; \n  mutate(\n    avg_sales = mean(sales),\n    .by = c(city, year)\n  ) |&gt; \n  select(city, year, month, sales, avg_sales)\n\n# A tibble: 8,602 × 5\n   city     year month sales avg_sales\n   &lt;chr&gt;   &lt;int&gt; &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 Abilene  2000     1    72      115.\n 2 Abilene  2000     2    98      115.\n 3 Abilene  2000     3   130      115.\n 4 Abilene  2000     4    98      115.\n 5 Abilene  2000     5   141      115.\n 6 Abilene  2000     6   156      115.\n 7 Abilene  2000     7   152      115.\n 8 Abilene  2000     8   131      115.\n 9 Abilene  2000     9   104      115.\n10 Abilene  2000    10   101      115.\n# ℹ 8,592 more rows"
  },
  {
    "objectID": "Unit_II/Activities/10a_Activity.html#optional-challenge",
    "href": "Unit_II/Activities/10a_Activity.html#optional-challenge",
    "title": "Lecture [10a] Activity",
    "section": "Optional Challenge",
    "text": "Optional Challenge\nRead the documentation for the first(), last(), and nth() summary functions (they all share a single documentation page). Then apply these functions to do the following: (1) calculate the average number of monthly listings in each city (removing any missing values), and then (2) find the cities with the highest, second-highest, second-lowest, and lowest average number of monthly listings.\n\n\n\nClick here for the answer key\n\n\n\ntxhousing |&gt; \n  summarize(\n    m_listings = mean(listings, na.rm = TRUE),\n    .by = city\n  ) |&gt; \n  summarize(\n    most = first(city, order_by = m_listings),\n    second_most = nth(city, n = 2, order_by = m_listings),\n    second_least = nth(city, n = -2, order_by = m_listings),\n    least = last(city, order_by = m_listings)\n  )\n\n# A tibble: 1 × 4\n  most       second_most second_least least  \n  &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;        &lt;chr&gt;  \n1 San Marcos Nacogdoches Dallas       Houston\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/week_05.html",
    "href": "Unit_I/week_05.html",
    "title": "Week 5: Visualize",
    "section": "",
    "text": "Principles\nScatterplots\nAesthetics\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [05a]"
  },
  {
    "objectID": "Unit_I/week_05.html#a-ggplot2-basics",
    "href": "Unit_I/week_05.html#a-ggplot2-basics",
    "title": "Week 5: Visualize",
    "section": "",
    "text": "Principles\nScatterplots\nAesthetics\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [05a]"
  },
  {
    "objectID": "Unit_I/week_05.html#b-more-ggplot2",
    "href": "Unit_I/week_05.html#b-more-ggplot2",
    "title": "Week 5: Visualize",
    "section": "[05b] More ggplot2",
    "text": "[05b] More ggplot2\n\nTopics\n\nVariation\nCovariation\nLayering\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nData Files\n\nsalaries.csv\n\n\n\nActivity\n\nActivity [05b]\n\n\n\nOptional Readings\n\nhttps://r4ds.had.co.nz/data-visualisation.html\nhttps://r4ds.had.co.nz/exploratory-data-analysis.html"
  },
  {
    "objectID": "Unit_I/week_05.html#week-5-assignment",
    "href": "Unit_I/week_05.html#week-5-assignment",
    "title": "Week 5: Visualize",
    "section": "Week 5 Assignment",
    "text": "Week 5 Assignment\n\nInstructions\n\nWeek 5 Assignment"
  },
  {
    "objectID": "Unit_I/week_03.html",
    "href": "Unit_I/week_03.html",
    "title": "Week 3: Program",
    "section": "",
    "text": "Assignment\nNaming\nFunctions\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [03a]"
  },
  {
    "objectID": "Unit_I/week_03.html#a-basic-programming",
    "href": "Unit_I/week_03.html#a-basic-programming",
    "title": "Week 3: Program",
    "section": "",
    "text": "Assignment\nNaming\nFunctions\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [03a]"
  },
  {
    "objectID": "Unit_I/week_03.html#b-more-programming",
    "href": "Unit_I/week_03.html#b-more-programming",
    "title": "Week 3: Program",
    "section": "[03b] More Programming",
    "text": "[03b] More Programming\n\nTopics\n\nVectors\nStrings\nPackages\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nActivity\n\nActivity [03b]"
  },
  {
    "objectID": "Unit_I/week_03.html#week-3-assignment",
    "href": "Unit_I/week_03.html#week-3-assignment",
    "title": "Week 3: Program",
    "section": "Week 3 Assignment",
    "text": "Week 3 Assignment\n\nInstructions\n\nWeek 3 Assignment"
  },
  {
    "objectID": "Unit_I/week_01.html",
    "href": "Unit_I/week_01.html",
    "title": "Week 1: Overview",
    "section": "",
    "text": "This lecture will not meet due to Martin Luther King Jr. Day."
  },
  {
    "objectID": "Unit_I/week_01.html#a-no-class",
    "href": "Unit_I/week_01.html#a-no-class",
    "title": "Week 1: Overview",
    "section": "",
    "text": "This lecture will not meet due to Martin Luther King Jr. Day."
  },
  {
    "objectID": "Unit_I/week_01.html#b-course-overview",
    "href": "Unit_I/week_01.html#b-course-overview",
    "title": "Week 1: Overview",
    "section": "[01b] Course Overview",
    "text": "[01b] Course Overview\n\nTopics\n\nSyllabus\nModules\nCanvas\n\n\n\nSlides\n\n\n\n\nRecording"
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#instructions",
    "href": "Unit_I/Assignments/05_Assignment.html#instructions",
    "title": "Week 05 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#question-1",
    "href": "Unit_I/Assignments/05_Assignment.html#question-1",
    "title": "Week 05 Assignment",
    "section": "Question 1",
    "text": "Question 1\n\nHelp me fix my code! “I want to depict the covariation of engine size and highway fuel efficiency.”\n\n\nggplot(mpg, x = displ, y = hwy) + geom_point()\n\n\nHelp me fix my code! “I want to create a time-series plot showing the population of Togo over time.” (Note that population comes from {tidyverse}).\n\n\nlibrary(tidyverse)\npopulation |&gt; \n  filter(country == \"Togo\") |&gt; \n  ggplot(aes(x = year, y = population)) |&gt; \n  geom_line() |&gt; \n  geom_point()"
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#question-2",
    "href": "Unit_I/Assignments/05_Assignment.html#question-2",
    "title": "Week 05 Assignment",
    "section": "Question 2",
    "text": "Question 2\nUse the following code to create the ts tibble and then create a new graphic that maps t to the x-axis, cos_t to the y-axis, and includes the following geoms: a line geom with a linewidth of 1, and a horizontal reference line geom with a color of “lightblue”, a linewidth of 3, and a y-intercept of 0. Set it up so that the reference line appears on a lower layer than (i.e., below) the cosine line.\n\nts &lt;- tibble(\n  t = seq(-9, 9, by = 0.25),\n  cos_t = cos(t)\n)\n\n\n\n\nHint\n\n\nYour figure should look something like this:\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#question-3",
    "href": "Unit_I/Assignments/05_Assignment.html#question-3",
    "title": "Week 05 Assignment",
    "section": "Question 3",
    "text": "Question 3\nPlot the distribution of the price variable in the diamonds tibble using a histogram, a density plot, and a boxplot (i.e., create three different graphics). Then, based on what you see, briefly describe the distribution in words (e.g., is it continuous or discrete, what are its minimum and maximum values, where are most of its values concentrated, what kind of shape does it have)."
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#question-4",
    "href": "Unit_I/Assignments/05_Assignment.html#question-4",
    "title": "Week 05 Assignment",
    "section": "Question 4",
    "text": "Question 4\nCreate figures using the diamonds tibble to answer the following two questions. Provide your code, figures, and a brief textual answer to each question (based on the figures).\n\nIs the weight (i.e., carat) of a diamond related to its value (i.e., price)?\nSimilarly, is the color of a diamond related to its value? If so, which colors are worth more?"
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#question-5",
    "href": "Unit_I/Assignments/05_Assignment.html#question-5",
    "title": "Week 05 Assignment",
    "section": "Question 5",
    "text": "Question 5\n\nLook at the figure below and describe it in text (i.e., by stating the aesthetic mappings and geoms that define it).\nNow recreate that figure from the diamonds tibble. It doesn’t have to have to be identical (e.g., in terms of linewidth) but it should have all the major elements there."
  },
  {
    "objectID": "Unit_I/Assignments/05_Assignment.html#question-6",
    "href": "Unit_I/Assignments/05_Assignment.html#question-6",
    "title": "Week 05 Assignment",
    "section": "Question 6",
    "text": "Question 6\n\nWhat are some of the pros and cons of histograms, density plots, and boxplots? When might you want to use one versus another?\nWhat is “layering” in the grammar of graphics and why is this such an important feature of {ggplot2}? Give a few examples of when layering might be useful in data visualization.\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#instructions",
    "href": "Unit_I/Assignments/03_Assignment.html#instructions",
    "title": "Week 03 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#question-1-assignment",
    "href": "Unit_I/Assignments/03_Assignment.html#question-1-assignment",
    "title": "Week 03 Assignment",
    "section": "Question 1 (Assignment)",
    "text": "Question 1 (Assignment)\n\nWhy is it important to give your objects in R good names? When might poorly thought-out names cause problems for a programmer?\nSam is designing a treehouse. The plan is basically a big rectangular box with a wall that is 5.32 ft wide and 4.74 ft long (Sam is very precise). Using R, calculate the area of the treehouse and save that value to an object named area. Then use that object to calculate the volume of the treehouse, assuming the walls are 5.61 ft tall. Print the volume object.\n\n\\[Area = Length \\times Width\\]\n\\[Volume = Area \\times Height\\]"
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#question-2-naming",
    "href": "Unit_I/Assignments/03_Assignment.html#question-2-naming",
    "title": "Week 03 Assignment",
    "section": "Question 2 (Naming)",
    "text": "Question 2 (Naming)\n\nHelp me fix my code! “I want to assign a name to my extraversion score on the Five Factor Model personality test.”\n\n\n5FM_extraversion &lt;- 23\n## Error: &lt;text&gt;:1:2: unexpected symbol\n## 1: 5FM_extraversion\n##      ^\n\n\nHelp me fix my code! “I want to calculate the average of three objects corresponding to negative emotion self-reports.”\n\n\nanger &lt;- 3\nsadness &lt;- 4\nfear &lt;- 3\nnegative_emotion &lt;- (anger + sadness + faer) / 3\n## Error in eval(expr, envir, enclos): object 'faer' not found"
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#question-3-functions",
    "href": "Unit_I/Assignments/03_Assignment.html#question-3-functions",
    "title": "Week 03 Assignment",
    "section": "Question 3 (Functions)",
    "text": "Question 3 (Functions)\n\nWhat are functions and arguments (in the context of programming) and why are they useful?\nHelp me fix my code! “I want to round 1/16 to three decimal places.”\n\n\nround(1 / 16; places = 3)\n## Error: &lt;text&gt;:1:13: unexpected ';'\n## 1: round(1 / 16;\n##                 ^"
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#question-4-vectors",
    "href": "Unit_I/Assignments/03_Assignment.html#question-4-vectors",
    "title": "Week 03 Assignment",
    "section": "Question 4 (Vectors)",
    "text": "Question 4 (Vectors)\n\nWhat did I mean when I said that “functions typically either transform each element in a vector or summarize all elements in a vector”? In your answer, provide an example (in text) of when each of these behaviors might be useful.\nBelow is a table of the top 5 countries’ production (i.e., GDP Per Capita at PPP) in 2017. Save the numbers only to a vector and then use R to create a new vector that contains the log-transformed versions of each number. Print that new vector.\n\n\n\n\nCountry\nTrillions\n\n\n\n\nUSA\n19.485\n\n\nChina\n12.238\n\n\nJapan\n4.872\n\n\nGermany\n3.693\n\n\nIndia\n2.651\n\n\n\n\n\n\nHint:\n\n\nYour output should look like this:\n\n\n[1] 2.9696449 2.5045459 1.5835045 1.3064391 0.9749369"
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#question-5-strings",
    "href": "Unit_I/Assignments/03_Assignment.html#question-5-strings",
    "title": "Week 03 Assignment",
    "section": "Question 5 (Strings)",
    "text": "Question 5 (Strings)\n\nSave the country names from the table in Question 4 to a character vector called country. Calculate the number of characters in each country name and print that.\nUse a function in R to calculate the average number of characters in each country name."
  },
  {
    "objectID": "Unit_I/Assignments/03_Assignment.html#question-6-packages",
    "href": "Unit_I/Assignments/03_Assignment.html#question-6-packages",
    "title": "Week 03 Assignment",
    "section": "Question 6 (Packages)",
    "text": "Question 6 (Packages)\n\nR packages can be found in a repository (e.g., CRAN), in a user library, or loaded into an R session. When would you want an R package to be in each of these places?\nInstall the praise package (don’t put the install.packages() code in your Quarto document as that often causes problems, so either do that in your console or use the RStudio button). Then load the installed package in your Quarto document and experiment with the praise() function by running it several times with no arguments. What does the function seem to do?\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important). If you receive an error message upon clicking “Render” about a missing file, this actually means that there is an error in one of your chunks."
  },
  {
    "objectID": "Unit_I/Activities/06b_Activity.html#question-1-scales",
    "href": "Unit_I/Activities/06b_Activity.html#question-1-scales",
    "title": "Lecture [06b] Activity",
    "section": "Question 1 (Scales)",
    "text": "Question 1 (Scales)\n\nUse the penguins dataset from the {palmerpenguins} package to create a plot that maps species to the x-axis and body_mass_g to the y-axis. Add a violin geom and a jitter geom (with 0.25 width). For the jitter geom only, map sex to color.\nConfigure the y axis to range from 2500 to 6500.\nConfigure the x-axis to use the scientific names of each species (see table below)\nBonus: Suppress all messages and warnings from this chunk.\n\n\n\n\nCommon Name\nScientific Name\n\n\n\n\nAdelie\nP. adeliae\n\n\nChinstrap\nP. antarcticus\n\n\nGentoo\nP. papua\n\n\n\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_violin() + \n  geom_jitter(width = 0.25, aes(color = sex)) +\n  scale_y_continuous(limits = c(2500, 6500)) +\n  scale_x_discrete(\n    labels = c(\n      \"Adelie\" = \"P. adeliae\",\n      \"Chinstrap\" = \"P. antarcticus\",\n      \"Gentoo\" = \"P. papua\"\n    )\n  )"
  },
  {
    "objectID": "Unit_I/Activities/06b_Activity.html#question-2-labels",
    "href": "Unit_I/Activities/06b_Activity.html#question-2-labels",
    "title": "Lecture [06b] Activity",
    "section": "Question 2 (Labels)",
    "text": "Question 2 (Labels)\nModify your final plot from Question 1 in the following ways:\n\nGive the x-axis, y-axis, and the color scale better labels (with Title Case)\nGive the plot a descriptive title about what the graphic is about (generally) and a subtitle that describes which sex-species combination had the highest body mass.\nAdd a caption stating the source of this data (e.g., the package name)\n\n\n\n\nClick here for the answer key\n\n\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_violin() + \n  geom_jitter(width = 0.25, aes(color = sex)) +\n  scale_y_continuous(limits = c(2500, 6500)) +\n  scale_x_discrete(\n    labels = c(\n      \"Adelie\" = \"P. adeliae\",\n      \"Chinstrap\" = \"P. antarcticus\",\n      \"Gentoo\" = \"P. papua\"\n    )\n  ) +\n  labs(\n    x = \"Penguin Species\",\n    y = \"Body Mass (g)\",\n    color = \"Sex\",\n    title = \"Body Mass by Species and Sex of Penguins at Palmer Station\",\n    subtitle = \"The penguins with the highest body mass were males of the P. papua species\",\n    caption = \"Data from the {palmerpenguins} R package\"\n  )"
  },
  {
    "objectID": "Unit_I/Activities/06b_Activity.html#question-3-themes",
    "href": "Unit_I/Activities/06b_Activity.html#question-3-themes",
    "title": "Lecture [06b] Activity",
    "section": "Question 3 (Themes)",
    "text": "Question 3 (Themes)\nModify your final plot from Question 2 in the following ways:\n\nApply the “classic” complete theme using theme_classic() and change the base font size to 10.\nAdjust the legend.background element to be rectangle with color = \"black\".\nAdjust the axis.text.x element to be text with face = \"italic\".\n\n\n\n\nClick here for the answer key\n\n\n\nggplot(penguins, aes(x = species, y = body_mass_g)) +\n  geom_violin() + \n  geom_jitter(width = 0.25, aes(color = sex)) +\n  scale_y_continuous(limits = c(2500, 6500)) +\n  scale_x_discrete(\n    labels = c(\n      \"Adelie\" = \"P. adeliae\",\n      \"Chinstrap\" = \"P. antarcticus\",\n      \"Gentoo\" = \"P. papua\"\n    )\n  ) +\n  labs(\n    x = \"Penguin Species\",\n    y = \"Body Mass (g)\",\n    color = \"Sex\",\n    title = \"Body Mass by Species and Sex of Penguins at Palmer Station\",\n    subtitle = \"The penguins with the highest body mass were males of the P. papua species\",\n    caption = \"Data from the {palmerpenguins} R package\"\n  ) +\n  theme_classic(base_size = 10) +\n  theme(\n    axis.text.x = element_text(face = \"italic\"),\n    legend.background = element_rect(color = \"black\")\n  )\n\n\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/05b_Activity.html#question-1-variation",
    "href": "Unit_I/Activities/05b_Activity.html#question-1-variation",
    "title": "Lecture [05b] Activity",
    "section": "Question 1 (Variation)",
    "text": "Question 1 (Variation)\nLoad the {palmerpenguins} package (after installing it, if you haven’t already) to gain access to the penguins dataset.\n\nCreate a visualization to depict the number of penguins from each species observed in the dataset. To match the penguin color scheme, make your bars white with thick black borders. Which species was least commonly observed?\nCreate a visualization to depict the distribution of the penguins’ observed body mass (body_mass_g). You can choose whether to use a histogram or density plot. What were some common values of body mass for the observed penguins?\nUsing a tool from last week, filter the data to only include female penguins and then use it to repeat part (b). Does this plot look different than it did before?\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nggplot(penguins, aes(x = species)) + \n  geom_bar(fill = \"white\", color = \"black\", linewidth = 2)\n\n\n\n\nThe chinstrap species was the least commonly observed.\nPart (b)\n\nggplot(penguins, aes(x = body_mass_g)) + \n  geom_density(linewidth = 2, fill = \"white\")\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nMost of the penguins were around 3500 g, but the masses ranged from a bit below 3000 to a bit above 6000.\nPart (c)\n\npenguinsF &lt;- penguins |&gt; filter(sex == \"female\")\nggplot(penguinsF, aes(x = body_mass_g)) + \n  geom_density(linewidth = 2, fill = \"white\")\n\n\n\n\nYes, it has two humps (i.e., common values) now: around 3500 and around 4750. We call this shape a “bimodal” distribution."
  },
  {
    "objectID": "Unit_I/Activities/05b_Activity.html#question-2-covariation",
    "href": "Unit_I/Activities/05b_Activity.html#question-2-covariation",
    "title": "Lecture [05b] Activity",
    "section": "Question 2 (Covariation)",
    "text": "Question 2 (Covariation)\nUse the unfiltered penguins dataset to answer these questions as well.\n\nUse the boxplot geom to depict the distribution of penguins’ body mass by species. Which species is the most massive?\nUse the density geom to depict the distribution of penguins’ body mass by sex. Does there appear to be a sex difference in the body mass distributions?\nCreate a visualization to depict which penguin species were observed the most (and the least) at each island. Which species was observed across the highest number of islands?\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nggplot(penguins, aes(x = body_mass_g, y = species)) + geom_boxplot()\n\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n\n\n\n\n\nThe Gentoo species have the highest body mass distribution.\nPart (b)\n\nggplot(penguins, aes(x = body_mass_g, color = sex)) + \n  geom_density(linewidth = 1)\n\nWarning: Removed 2 rows containing non-finite values (`stat_density()`).\n\n\n\n\n\nThe male distribution seems shifted higher relative to the female distribution, though the two overlap.\nPart (c)\n\nggplot(penguins, aes(x = species, y = island)) + \n  geom_jitter(width = 0.25, height = 0.25)\n\n\n\n\nThe Adelie species was the only one observed at all three islands."
  },
  {
    "objectID": "Unit_I/Activities/05b_Activity.html#question-3-layering",
    "href": "Unit_I/Activities/05b_Activity.html#question-3-layering",
    "title": "Lecture [05b] Activity",
    "section": "Question 3 (Layering)",
    "text": "Question 3 (Layering)\nUse the mpg dataset (included in {tidyverse}) to answer these questions.\n\nCreate a scatterplot to depict the relationship between engine size (displ) and highway fuel efficiency (hwy).\nModify your plot from part (a) to add a reference line to this plot showing where highway fuel efficiency equals 25 miles per gallon; make the line orange, 1mm thick, and displayed behind/below the points.\nFinally, modify your plot from part (b) to randomly push each point a small amount. This will make it easier to see when there are multiple overlapping points, i.e., cars with the same engine size and highway fuel efficiency.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\n\n\n\n\nPart (b)\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_hline(yintercept = 25, color = \"orange\", linewidth = 1) +\n  geom_point()\n\n\n\n\nPart (c)\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_hline(yintercept = 25, color = \"orange\", linewidth = 1) +\n  geom_jitter()\n\n\n\n\nJittering can be helpful for continuous variables too! Consider this whenever you have overlapping points.\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/04b_Activity.html#question-1",
    "href": "Unit_I/Activities/04b_Activity.html#question-1",
    "title": "Lecture [04b] Activity",
    "section": "Question 1",
    "text": "Question 1\nLoad in the economics tibble (included in {tidyverse}). Then create a pipeline to accomplish the following steps, saving the output to a new tibble called unemp and printing it:\n\nCalculate a new variable called rate by dividing unemploy (the number of unemployed, in thousands) by pop (the total population, in thousands).\nThen drop (i.e., unselect) the pce, uempmed, and psavert variables from the tibble.\n\n\n\n\nClick here for the answer key\n\n\nFinal Pipeline:\n\nlibrary(tidyverse)\nunemp &lt;- \n  economics |&gt; \n  mutate(rate = unemploy / pop) |&gt; \n  select(-pce, -uempmed, -psavert) |&gt; \n  print()\n\n# A tibble: 574 × 4\n   date          pop unemploy   rate\n   &lt;date&gt;      &lt;dbl&gt;    &lt;dbl&gt;  &lt;dbl&gt;\n 1 1967-07-01 198712     2944 0.0148\n 2 1967-08-01 198911     2945 0.0148\n 3 1967-09-01 199113     2958 0.0149\n 4 1967-10-01 199311     3143 0.0158\n 5 1967-11-01 199498     3066 0.0154\n 6 1967-12-01 199657     3018 0.0151\n 7 1968-01-01 199808     2878 0.0144\n 8 1968-02-01 199920     3001 0.0150\n 9 1968-03-01 200056     2877 0.0144\n10 1968-04-01 200208     2709 0.0135\n# ℹ 564 more rows"
  },
  {
    "objectID": "Unit_I/Activities/04b_Activity.html#question-2",
    "href": "Unit_I/Activities/04b_Activity.html#question-2",
    "title": "Lecture [04b] Activity",
    "section": "Question 2",
    "text": "Question 2\nDownload the “kaggle_cereal.csv” data file from Canvas. Copy it to your Project folder and read it into R as a tibble. Then create a pipeline to produce a short list of cereals for me to try. I am only interested in cold cereals with a rating greater than 70. Please arrange the list so that the cereals with the fewest calories are displayed at the top. Save the result as a tibble called jeffs_list (I expect it to be even more popular than Craig’s list 🙃) and print it.\n\n\n\nClick here for the answer key\n\n\n\njeffs_list &lt;- \n  read_csv(\"../../data/kaggle_cereal.csv\")  |&gt; \n  filter(type == \"cold\" & rating &gt; 70) |&gt; \n  arrange(calories) |&gt; \n  print()\n\n# A tibble: 4 × 8\n  name                      mfr      type  calories sodium carbo sugars rating  \n  &lt;chr&gt;                     &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;   \n1 All-Bran with Extra Fiber Kelloggs cold        50    140     8      0 93.7049…\n2 Shredded Wheat 'n'Bran    Nabisco  cold        90      0    19      0 74.4729…\n3 Shredded Wheat spoon size Nabisco  cold        90      0    20      0 missing \n4 Mueslix Crispy Blend      Kelloggs cold       160    150    17     13 missing"
  },
  {
    "objectID": "Unit_I/Activities/04b_Activity.html#question-3",
    "href": "Unit_I/Activities/04b_Activity.html#question-3",
    "title": "Lecture [04b] Activity",
    "section": "Question 3",
    "text": "Question 3\nTwo other useful column verbs are rename() and relocate(). You can use rename(tbl, new_name = old_name) to rename a variable in a tibble. You can use relocate(tbl, var_to_move, .before = other_var) to move a variable before another variable or relocate(tbl, var_to_move, .after = other_var) to move a variable after another variable. These verbs won’t be on the assignment, but are useful to play around with.\n\nTry to rename the uempmed variable in the economics tibble to duration.\nTry to move the unemploy variable in the economics tibble to come after the date variable.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nlibrary(tidyverse)\nrename(economics, duration = uempmed)\n\n# A tibble: 574 × 6\n   date         pce    pop psavert duration unemploy\n   &lt;date&gt;     &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 1967-07-01  507. 198712    12.6      4.5     2944\n 2 1967-08-01  510. 198911    12.6      4.7     2945\n 3 1967-09-01  516. 199113    11.9      4.6     2958\n 4 1967-10-01  512. 199311    12.9      4.9     3143\n 5 1967-11-01  517. 199498    12.8      4.7     3066\n 6 1967-12-01  525. 199657    11.8      4.8     3018\n 7 1968-01-01  531. 199808    11.7      5.1     2878\n 8 1968-02-01  534. 199920    12.3      4.5     3001\n 9 1968-03-01  544. 200056    11.7      4.1     2877\n10 1968-04-01  544  200208    12.3      4.6     2709\n# ℹ 564 more rows\n\n\nPart (b)\n\nrelocate(economics, unemploy, .after = date)\n\n# A tibble: 574 × 6\n   date       unemploy   pce    pop psavert uempmed\n   &lt;date&gt;        &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n 1 1967-07-01     2944  507. 198712    12.6     4.5\n 2 1967-08-01     2945  510. 198911    12.6     4.7\n 3 1967-09-01     2958  516. 199113    11.9     4.6\n 4 1967-10-01     3143  512. 199311    12.9     4.9\n 5 1967-11-01     3066  517. 199498    12.8     4.7\n 6 1967-12-01     3018  525. 199657    11.8     4.8\n 7 1968-01-01     2878  531. 199808    11.7     5.1\n 8 1968-02-01     3001  534. 199920    12.3     4.5\n 9 1968-03-01     2877  544. 200056    11.7     4.1\n10 1968-04-01     2709  544  200208    12.3     4.6\n# ℹ 564 more rows\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/03b_Activity.html#question-1-vectors",
    "href": "Unit_I/Activities/03b_Activity.html#question-1-vectors",
    "title": "Lecture [03b] Activity",
    "section": "Question 1 (Vectors)",
    "text": "Question 1 (Vectors)\nImagine that you ran a stand selling bananas for three days. On the first day, you sold $30 worth of bananas and spent $15 on supplies. On the second day, you sold $50 worth of bananas and spent $15 on supplies. On the third day, you sold $40 worth of bananas and spent $100 on repairs to the stand (due to an unfortunate fire).\n\nCreate two vectors named sales and costs to store how much you sold and how much you spent on each day, respectively.\nSubtract the costs object from the sales object and save the result to a new object named profits. Print this to see your profits per day.\nUse the sum() function to calculate your total profits over all three days. Was your effort fruitful, i.e., did you make money overall?\n\n\n\n\nClick here for the answer key\n\n\n\n# Part (a)\nsales &lt;- c(30, 50, 40)\ncosts &lt;- c(15, 15, 100)\n\n# Part (b)\nprofits &lt;- sales - costs\nprofits\n## [1]  15  35 -60\n\n# Part (c): No, I lost money!\nsum(profits)\n## [1] -10"
  },
  {
    "objectID": "Unit_I/Activities/03b_Activity.html#question-2-strings",
    "href": "Unit_I/Activities/03b_Activity.html#question-2-strings",
    "title": "Lecture [03b] Activity",
    "section": "Question 2 (Strings)",
    "text": "Question 2 (Strings)\n\nCreate a character vector named flavors that contains the following strings and print it to the console:\n\n\nCookies & Cream\nAmericone Dream (R)\nBob Marley’s 1 Love\n\n\nUse a function to calculate the number of strings in flavors.\nUse another function to calculate the number of characters in each string in flavors.\nLet R know how you feel about ice cream by using a function to either make all the characters in flavors uppercase (you LOVE ice cream) or lowercase (you don’t love ice cream).\n\n\n\n\nClick here for the answer key\n\n\n\n# Part (a)\nflavors &lt;- c(\"Cookies & Cream\", \"Americone Dream (R)\", \"Bob Marley's 1 Love\")\nflavors\n## [1] \"Cookies & Cream\"     \"Americone Dream (R)\" \"Bob Marley's 1 Love\"\n\n# Part (b)\nlength(flavors)\n## [1] 3\n\n# Part (c)\nnchar(flavors)\n## [1] 15 19 19\n\n# Part (d)\ntoupper(flavors)\n## [1] \"COOKIES & CREAM\"     \"AMERICONE DREAM (R)\" \"BOB MARLEY'S 1 LOVE\"\ntolower(flavors)\n## [1] \"cookies & cream\"     \"americone dream (r)\" \"bob marley's 1 love\""
  },
  {
    "objectID": "Unit_I/Activities/03b_Activity.html#question-3-packages",
    "href": "Unit_I/Activities/03b_Activity.html#question-3-packages",
    "title": "Lecture [03b] Activity",
    "section": "Question 3 (Packages)",
    "text": "Question 3 (Packages)\n\nInstall the tidyverse package. It may take several minutes to install because it contains several sub-packages that we will use in this class.\nUse a function we discussed in lecture to view the vignettes included in the tidyverse package (hint: be careful about uppercase and lowercase letters in the name of the function).\nIn the new window that opens, click the link that says “HTML” next to “Welcome to the tidyverse” and read that vignette (it is relatively brief and will prepare you for next week).\n\n\n\n\nClick here for the answer key\n\n\n\n# Part (a)\ninstall.packages(\"tidyverse\")\n# or RStudio &gt; Extras pane &gt; Packages tab &gt; Install button\n\n# Part (b)\nbrowseVignettes(\"tidyverse\")\n\n# Part (c)\n\nhttps://tidyverse.tidyverse.org/articles/paper.html\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/02b_Activity.html#question-1-projects",
    "href": "Unit_I/Activities/02b_Activity.html#question-1-projects",
    "title": "Lecture [02b] Activity",
    "section": "Question 1 (Projects)",
    "text": "Question 1 (Projects)\nIf you haven’t already, create an RStudio Project for this entire course. Name it whatever makes sense to you (e.g., PSYC 399 or Data2) and save it somewhere convenient on your computer (e.g., in a OneDrive/Dropbox/Box folder or on your desktop). Think about how you will organize and name your files in this project folder. Will you save your notes in one Quarto document per day or per week or something else? Will you have a consistent naming system for the files based on lecture numbers (e.g., 01a Notes.qmd and 01a Homework.qmd) or dates (e.g., 01-25 Notes.qmd) or something else?"
  },
  {
    "objectID": "Unit_I/Activities/02b_Activity.html#question-2-quarto",
    "href": "Unit_I/Activities/02b_Activity.html#question-2-quarto",
    "title": "Lecture [02b] Activity",
    "section": "Question 2 (Quarto)",
    "text": "Question 2 (Quarto)\nCreate a new Quarto document for this activity and save it in your new project folder with the naming convention you decided on in Question 1. Clear out the boilerplate text and create a new R code chunk. Inside this code chunk, use R as a calculator to answer the following question: If it costs $100 for each professor and $25 for each student to register for a conference, how much would it cost in total for a department of 8 professors and 20 students to register? Check that the code is working by running the chunk. Once it is giving the correct answer, render the Quarto document to an HTML file and preview it in the Viewer.\n\n\n\nClick here for the answer key\n\n\nYour .qmd file should look something like this (the header is optional):\n---\ntitle: \"Conference Costs\"\nformat: html\n---\n\n```{r}\n100 * 8 + 25 * 20\n```\nYour R output should tell you that the total cost would be $1300."
  },
  {
    "objectID": "Unit_I/Activities/02b_Activity.html#question-3-markdown",
    "href": "Unit_I/Activities/02b_Activity.html#question-3-markdown",
    "title": "Lecture [02b] Activity",
    "section": "Question 3 (Markdown)",
    "text": "Question 3 (Markdown)\nUse markdown to add some formatted text before and after the code chunk in your Quarto document. Before the chunk, describe in text what your code chunk is doing and why. Format some of the text using italics, bold, etc. Add an image below the chunk showing people at a conference (e.g., https://i.imgur.com/houkSmT.jpeg)\n\n\n\nClick here for the answer key\n\n\nYour .qmd file should look something like this (the header is optional):\n---\ntitle: \"Conference Costs\"\nformat: html\n---\n\n**How much will it cost** to register our *whole department* to attend the conference? With 8 professors and 20 students, at a price of \\$100 per professor and \\$25 per student, the total cost will be:\n\n```{r}\n100 * 8 + 25 * 20\n```\n\n![](https://i.imgur.com/houkSmT.jpeg)"
  },
  {
    "objectID": "syllabus.html",
    "href": "syllabus.html",
    "title": "Syllabus",
    "section": "",
    "text": "Most of the material that students will be required to learn will come from the course lectures, activities, and assignments. However, students’ learning will also be supplemented by assigned readings from the following textbook. It is available in physical/printed form and you are welcome to purchase a copy if you prefer printed books. However, a web-based version is also available for free and I recommend you try this version as it is more frequently updated, easier to navigate (without pagination), and allows you to easily follow along by copying and pasting its examples.\n\nR for Data Science by Hadley Wickham & Garrett Grolemund\n\nThe following texts are where I would recommend you turn after completing this course (or during it, if you are feeling ambitious) to dive into more advanced topics about visualization and programming, respectively.\n\nggplot2: Elegent graphics for data analysis (3rd Edition) by Hadley Wickham\nAdvanced R (2nd Edition) by Hadley Wickham"
  },
  {
    "objectID": "syllabus.html#course-materials",
    "href": "syllabus.html#course-materials",
    "title": "Syllabus",
    "section": "",
    "text": "Most of the material that students will be required to learn will come from the course lectures, activities, and assignments. However, students’ learning will also be supplemented by assigned readings from the following textbook. It is available in physical/printed form and you are welcome to purchase a copy if you prefer printed books. However, a web-based version is also available for free and I recommend you try this version as it is more frequently updated, easier to navigate (without pagination), and allows you to easily follow along by copying and pasting its examples.\n\nR for Data Science by Hadley Wickham & Garrett Grolemund\n\nThe following texts are where I would recommend you turn after completing this course (or during it, if you are feeling ambitious) to dive into more advanced topics about visualization and programming, respectively.\n\nggplot2: Elegent graphics for data analysis (3rd Edition) by Hadley Wickham\nAdvanced R (2nd Edition) by Hadley Wickham"
  },
  {
    "objectID": "syllabus.html#learning-objectives",
    "href": "syllabus.html#learning-objectives",
    "title": "Syllabus",
    "section": "Learning Objectives",
    "text": "Learning Objectives\nBy the end of this course, my sincere hope is that students will have:\n\nDeveloped an appreciation for the value of data science in psychology\nGained proficiency and confidence in foundational data science skills\nApplied these skills to extract knowledge and insights from real-world data\nLaid the groundwork for creating a data science portfolio, blog, or website\nBeen exposed to advanced data science topics that piqued their interest\nPushed through enough uncertainty to feel empowered to continue learning\nBegun accepting that silly mistakes are inevitable and need to be planned for\nAutomated a tedious task that no human will ever have to do manually again\nBenefited from the generosity of others and paid it forward to someone else\nFelt like a total fool, an absolute wizard, and just about everything in between\nFound their inner child, pursued some whimsies, and had fun along the way"
  },
  {
    "objectID": "syllabus.html#grading",
    "href": "syllabus.html#grading",
    "title": "Syllabus",
    "section": "Grading",
    "text": "Grading\n\nGrading Scheme\nGrades will be assigned using the standard scale where the following thresholds must be met to earn each grade:\n\n\n\nLetter Grade\nGrade Points\nThreshold\n\n\n\n\nA\n4.0\n93%\n\n\nA-\n3.7\n90%\n\n\nB+\n3.3\n87%\n\n\nB\n3.0\n83%\n\n\nB-\n2.7\n80%\n\n\nC+\n2.3\n77%\n\n\nC\n2.0\n73%\n\n\nC-\n1.7\n70%\n\n\nD+\n1.3\n67%\n\n\nD\n1.0\n63%\n\n\nD-\n0.7\n60%\n\n\n\n\n\nGrade Components\n\n60% Homework Assignments (6% each × 10)\n20% Unit I Project (2% Planning Document + 14% Report Document + 4% Debreifing Document)\n20% Unit II Project (2% Planning Document + 14% Report Document + 4% Debreifing Document)\n\n\n\nHomework Assignments\nHomework assignments are frequent, brief, and standardized; they provide students opportunities to practice what they learned during lecture and receive relatively rapid feedback. Homework focuses on more concrete educational objectives (e.g., remembering, understanding, and applying). To complete a homework assignment, students should view the HTML file on Canvas corresponding to it and follow its instructions. Doing so will involve creating a new file (e.g., an RMarkdown document), which should then be uploaded to Canvas before the assignment deadline.\nHomework should be completed by each student individually to maximize learning. Students are welcome to help each other if they get stuck but I encourage them to try to push through any frustration and uncertainty before asking for help, as overcoming such obstacles is critical to building confidence and mastery. Along these lines, if a classmate asks you for help, I recommend initially asking them to describe what they have already tried and then giving hints (rather than jumping to providing complete solutions). That said, please reach out to me with questions, especially if an assignment seems to contain errors, be unclear in its directions, or requires considerably more than two hours to complete.\n\n\nProjects\nUnit projects are infrequent, extended, and group-based; they provide students opportunities to diversify, specialize, and connect the course material to their personal interests. Unit projects focus on more abstract educational objectives (e.g., analyzing, evaluating, and creating). Unit projects also focus on collaboration within small data science teams, providing students the opportunity to hone valuable communication and organization skills.\nThe Unit I Project will require two weeks of work and will have three graded components: (1) each team will submit a project planning document at the end of the first week and receive a shared grade, (2) each team will submit a report document at the end of the second week and receive a shared grade, and (3) each student will submit a separate debriefing document at the end of the second week and receive an individual grade.\nThe Unit II Project will require two weeks of work and will have three graded components: (1) each team will submit a project planning document at the end of the first week and receive a shared grade, (2) each team will submit a report document at the end of the second week and receive a shared grade, and (3) each student will submit a separate debriefing document at the end of the second week and receive an individual grade.\nCollaborative work is nearly ubiquitous in academic and industrial research settings and it is important for students to learn how to navigate these settings effectively. That said, I am here to help facilitate communication within groups if necessary. So please reach out to me as soon as possible if there are problems within your group that you are having trouble addressing (e.g., decisional deadlocks, disrespectful communication, or shirked responsibilities)."
  },
  {
    "objectID": "syllabus.html#university-policies",
    "href": "syllabus.html#university-policies",
    "title": "Syllabus",
    "section": "University Policies",
    "text": "University Policies\nBelow, I summarize several relevant policies. The KU Policy Library contains a more complete list with more details.\n\nAccommodations for disabilities\nThe Student Access Center coordinates academic accommodations and services for all eligible KU students with disabilities. If you have a disability for which you wish to request accommodations and have not contacted SAC, please do so as soon as possible. They are located in 22 Strong Hall and can be reached at 785-864-4064 (V/TTY). Information about their services can be found at &lt;www.access.ku.edu&gt;. Please contact me privately in regard to your needs in this course.\n\n\nAcademic Misconduct\nAcademic misconduct by a student shall include, but not be limited to, disruption of classes; threatening an instructor or fellow student in an academic setting; giving or receiving of unauthorized aid on examinations or in the preparation of notebooks, themes, reports or other assignments; knowingly misrepresenting the source of any academic work; unauthorized changing of grades; unauthorized use of University approvals or forging of signatures; falsification of research results; plagiarizing of another’s work; violation of regulations or ethical codes for the treatment of human and animal subjects; or otherwise acting dishonestly in research. After consultation with the department chairperson, an instructor may, with due notice to the student, treat as unsatisfactory (1) any student work that is a product of academic misconduct, or (2) a student’s performance for a course when there are severe or repeated instances of academic misconduct. See USRR 2.6 for more information.\n\n\nCommercial Note-Taking\nPursuant to the University of Kansas’ Policy on Commercial Note-Taking Ventures, commercial note-taking is not permitted in this course. Lecture notes and course materials may not be sold to any person or entity in any form. Any student engaged in or contributing to the commercial exchange of notes or course materials will be subject to discipline, including academic misconduct charges, in accordance with University policy. Please note that note-taking provided by a student volunteer for a student with a disability, as a reasonable accommodation under the ADA, is not the same as commercial note-taking.\n\n\nDiversity and Inclusion\nThe University of Kansas supports an inclusive learning environment in which diversity and individual differences are understood, respected, and appreciated. We believe that all students benefit from training and experiences that will help them to learn, lead, and serve in an increasingly diverse society. All members of our campus community must accept the responsibility to demonstrate civility and respect for the dignity of others. Expressions or actions that disparage a person’s or group’s race, ethnicity, nationality, culture, gender, gender identity / expression, religion, sexual orientation, age, veteran status, or disability are contrary to the mission of the University. We expect that KU students, faculty, and staff will promote an atmosphere of respect for all members of our KU community. This is an inclusive classroom. At KU, administrators, faculty, and staff are committed to the creation and maintenance of “inclusive learning” spaces. These are classrooms, labs, and other places of learning where you will be treated with respect and dignity and where all individuals are provided equitable opportunity to participate, contribute, and succeed."
  },
  {
    "objectID": "syllabus.html#course-policies",
    "href": "syllabus.html#course-policies",
    "title": "Syllabus",
    "section": "Course Policies",
    "text": "Course Policies\n\nAttendance\nAttendance at course meetings is strongly encouraged but not required. Video recordings of the lectures will be made available online as soon as possible (usually within hours). However, I cannot guarantee that the recording equipment and software will always work as intended, so please attend in person whenever possible.\n\n\nLate Submissions\nAssignments and project components that are submitted after the deadline (usually 11:59pm CT on Saturday) may receive reduced credit based on how late they are submitted and other extenuating circumstances (e.g., the reason for the submission being late, the level of communication provided by the student about the late submission, and the student’s prior behavior in the course). Students are encouraged to reach out to me before the deadline if they expect they may not be able to submit an assignment or project component on time. Note that, in general, I would prefer students to (a) submit high quality and complete work a day or two after the deadline rather than (b) submit low quality or incomplete work right before the deadline. However, the longer a student waits to submit their work after the deadline, the less credit they are likely to receive.\n\n\nAsking for Help\nYou are very welcome to ask the instructor and/or teaching assistant for clarification and assistance on course materials (e.g., lectures, assignments, and projects). However, we ask that you do so during class or office hours. We will try to respond to emails as quickly as possible, but cannot guarantee that we will be able to answer a question outside of these times (especially on weekends). Thus, given that homework assignments are due on Saturday nights, it is a good idea to take a look at the assignments after class on Wednesday so that you can decide whether you need to visit the teaching assistant’s office hours on Thursday or the instructor’s office hours on Friday.\n\n\nCo-locating with PSYC 792\nNote that this course will be co-locating with a graduate-level course (PSYC 792). This means that graduate students will also be present at the lectures and will complete the same homework assignments. However, the graduate-level course is differentiated by more advanced projects. I don’t anticipate this will cause any issues for students in either course, but let me know if you have any questions or concerns about this."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DATA2: Foundations of Data Science",
    "section": "",
    "text": "As the social and behavioral sciences become increasingly infused with technology and research samples become increasingly large and complex, proficiency in working with computers and electronic data is becoming more and more necessary for researchers at all career stages. In this course, students will gain confidence and mastery over fundamental skills in computer programming, task automation, and the management, visualization, and communication of data. By the end of the course, students will have a strong foundation of conceptual knowledge about these topics, as well as practical experience using the R software environment. This course is designed for undergraduate students who want to pursue careers that work heavily with data."
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "DATA2: Foundations of Data Science",
    "section": "",
    "text": "As the social and behavioral sciences become increasingly infused with technology and research samples become increasingly large and complex, proficiency in working with computers and electronic data is becoming more and more necessary for researchers at all career stages. In this course, students will gain confidence and mastery over fundamental skills in computer programming, task automation, and the management, visualization, and communication of data. By the end of the course, students will have a strong foundation of conceptual knowledge about these topics, as well as practical experience using the R software environment. This course is designed for undergraduate students who want to pursue careers that work heavily with data."
  },
  {
    "objectID": "index.html#course-information",
    "href": "index.html#course-information",
    "title": "DATA2: Foundations of Data Science",
    "section": "Course Information",
    "text": "Course Information\n\nInstructor\nDr. Jeffrey Girard, Assistant Professor, Department of Psychology, University of Kansas Email: jmgirard@ku.edu Office: Fraser 454 Office Hours: F 12:00-1:00pm, 2:00-3:00pm CT\n\n\nTeaching Assistant\nJames Adaryukov, PhD Student, Department of Psychology, University of Kansas Email: jadaryukov@ku.edu Office: Fraser 534 Office Hours: Th 1:00-3:00pm CT\n\n\nClassroom\nRoom 547, Fraser Hall, 1415 Jayhawk Blvd, Lawrence, KS Lectures: MW 9:00-10:50am CT"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": "Schedule",
    "section": "",
    "text": "Unit\nWeek\nLecture (a)\nLecture (b)\nDue\n\n\n\n\nI\n1\nNO CLASS\n2023-01-18\n\n\n\nI\n2\n2023-01-23\n2023-01-25\nAssignment\n\n\nI\n3\n2023-01-30\n2023-02-01\nAssignment\n\n\nI\n4\n2023-02-06\n2023-02-08\nAssignment\n\n\nI\n5\n2023-02-13\n2023-02-15\nAssignment\n\n\nI\n6\n2023-02-20\n2023-02-22\nAssignment\n\n\nI\n7\n2023-02-27\n2023-03-01\nPlan\n\n\nI\n8\n2023-03-06\n2023-03-08\nReport\n\n\n\n9\nNO CLASS\nNO CLASS\n\n\n\nII\n10\n2023-03-20\n2023-03-22\nAssignment\n\n\nII\n11\n2023-03-27\n2023-03-29\nAssignment\n\n\nII\n12\n2023-04-03\n2023-04-05\nAssignment\n\n\nII\n13\n2023-04-10\n2023-04-12\nAssignment\n\n\nII\n14\n2023-04-17\n2023-04-19\nAssignment\n\n\nII\n15\n2023-04-24\n2023-04-26\nPlan\n\n\nII\n16\n2023-05-01\n2023-05-03\nReport"
  },
  {
    "objectID": "schedule.html#dates",
    "href": "schedule.html#dates",
    "title": "Schedule",
    "section": "",
    "text": "Unit\nWeek\nLecture (a)\nLecture (b)\nDue\n\n\n\n\nI\n1\nNO CLASS\n2023-01-18\n\n\n\nI\n2\n2023-01-23\n2023-01-25\nAssignment\n\n\nI\n3\n2023-01-30\n2023-02-01\nAssignment\n\n\nI\n4\n2023-02-06\n2023-02-08\nAssignment\n\n\nI\n5\n2023-02-13\n2023-02-15\nAssignment\n\n\nI\n6\n2023-02-20\n2023-02-22\nAssignment\n\n\nI\n7\n2023-02-27\n2023-03-01\nPlan\n\n\nI\n8\n2023-03-06\n2023-03-08\nReport\n\n\n\n9\nNO CLASS\nNO CLASS\n\n\n\nII\n10\n2023-03-20\n2023-03-22\nAssignment\n\n\nII\n11\n2023-03-27\n2023-03-29\nAssignment\n\n\nII\n12\n2023-04-03\n2023-04-05\nAssignment\n\n\nII\n13\n2023-04-10\n2023-04-12\nAssignment\n\n\nII\n14\n2023-04-17\n2023-04-19\nAssignment\n\n\nII\n15\n2023-04-24\n2023-04-26\nPlan\n\n\nII\n16\n2023-05-01\n2023-05-03\nReport"
  },
  {
    "objectID": "schedule.html#topics",
    "href": "schedule.html#topics",
    "title": "Schedule",
    "section": "Topics",
    "text": "Topics\n\n\n\nUnit\nWeek\nLecture (a)\nLecture (b)\n\n\n\n\nI\n1\nNO CLASS\nCourse Overview\n\n\nI\n2\nMeeting R\nGetting Organized\n\n\nI\n3\nBasic Programming\nMore Programming\n\n\nI\n4\nTidy Data\ndplyr Basics\n\n\nI\n5\nggplot2 Basics\nmore ggplot2\n\n\nI\n6\nProgram to Communicate\nVisualize to Communicate\n\n\nI\n7\nUnit I Project\nUnit I Project\n\n\nI\n8\nUnit I Project\nUnit I Project\n\n\n\n9\nNO CLASS\nNO CLASS\n\n\nII\n10\nSummarization\nConvenience\n\n\nII\n11\nReshaping Data\nJoining Data\n\n\nII\n12\nAdvanced Elements\nAdvanced Elements\n\n\nII\n13\nSpecial Data Types\nAutomation\n\n\nII\n14\nShowcase\nShowcase\n\n\nII\n15\nUnit II Project\nUnit II Project\n\n\nII\n16\nUnit II Project\nUnit II Project"
  },
  {
    "objectID": "Unit_I/Activities/02a_Activity.html#question-1-r-and-rstudio",
    "href": "Unit_I/Activities/02a_Activity.html#question-1-r-and-rstudio",
    "title": "Lecture [02a] Activity",
    "section": "Question 1 (R and RStudio)",
    "text": "Question 1 (R and RStudio)\nThere are many ways to customize the RStudio interface. To explore the possibilities, go to Tools &gt; Global Options. The most noticeable things you can change are aspects of RStudio’s appearance. If you click on the Appearance section, you can select a different zoom level, editor font, font size, and editor theme. I usually teach with the default settings and you can keep everything the same if you want your computer to match the one I teach from, but for my own work I use the “Tomorrow Night 80s” theme and a custom font called Fira Code. I also make slight changes to the Pane Layout section that I’d be happy to describe to you in class if you’re interested.\nAll of this stuff is optional, but a few changes that I’d recommend making are to go to the General section and make sure that “Restore .RData into workspace at startup” is unchecked and that “Save workspace to .RData on exit” is set to “Never”. Finally, under the Code section and the Display tab, I like to check the box for “Allow scroll past end of document”."
  },
  {
    "objectID": "Unit_I/Activities/02a_Activity.html#question-2-console",
    "href": "Unit_I/Activities/02a_Activity.html#question-2-console",
    "title": "Lecture [02a] Activity",
    "section": "Question 2 (Console)",
    "text": "Question 2 (Console)\nRead what the user wanted to do and look at the command they sent to R. Fix the errors in the commands and calculate the answers.\n\nI want to add 20 and 0.2 and divide that sum by 4.1. But I get an error when I try:[20 + .2] \\ 4.1\nI want to multiply 6 by the sum of 2 and 1,300. But I get an error when I try:6 x (2 + 1,300)\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\nChange the brackets [] to parentheses () because parentheses () are the order-of-operations operator in R. Also, change the backslash \\ to a forward slash / because forward slash / is the division operator in R.\n\n(20 + .2) / 4.1\n#&gt; [1] 4.926829\n\nAnswer (b)\nChange the x to an asterisk * because asterisk * is the multiplication operator in R. Also, remove the comma , from 1,300 because R doesn’t use commas to delimit digits in large numbers.\n\n6 * (2 + 1300)\n#&gt; [1] 7812"
  },
  {
    "objectID": "Unit_I/Activities/02a_Activity.html#question-3-scripts",
    "href": "Unit_I/Activities/02a_Activity.html#question-3-scripts",
    "title": "Lecture [02a] Activity",
    "section": "Question 3 (Scripts)",
    "text": "Question 3 (Scripts)\nCreate a new R script file and copy your answers to Question 2 into it. Add some comments to explain which line of code corresponds to 2a and 2b. I’ll talk about this more in [06a], but it is a good idea to get into the practice of keeping your code organized and commented. Organized code will also make grading easier, and a happy grader is associated with a happy student. 😉\n\n\n\nClick here for the answer key\n\n\n\n## File &gt; New File &gt; R Script (or equivalent shortcuts)\n\n# Question 2a\n(20 + .2) / 4.1\n\n# Question 2b\n6 * (2 + 1300)\n\n## File &gt; Save (or equivalent shortcuts)"
  },
  {
    "objectID": "Unit_I/Activities/02a_Activity.html#fun-stuff",
    "href": "Unit_I/Activities/02a_Activity.html#fun-stuff",
    "title": "Lecture [02a] Activity",
    "section": "Fun Stuff",
    "text": "Fun Stuff\n\nThe Literal Genie\nWhat it feels like to talk to R sometimes…"
  },
  {
    "objectID": "Unit_I/Activities/03a_Activity.html#question-1",
    "href": "Unit_I/Activities/03a_Activity.html#question-1",
    "title": "Lecture [03a] Activity",
    "section": "Question 1",
    "text": "Question 1\nWhich of the following commands do you think will create an error in R? Why?\n\nscore@T1 &lt;- 3.2\nscore_at_T1 &lt;- 3.2\nscore at T1 &lt;- 3.2\n1_score &lt;- 3.2\nScoreAtTime1 &lt;- 3.2\n\nMake your best guesses just by looking at the commands and then check your guesses by running the commands in R. Bonus: Can you come up with a better name for this variable?\n\n\n\nClick here for the answer key\n\n\n\n\n\nCode\nResult (reason)\n\n\n\n\nscore@T1 &lt;- 3.2\n🛑 Error (@ not allowed in name)\n\n\nscore_at_T1 &lt;- 3.2\n✅ No Error\n\n\nscore at T1 &lt;- 3.2\n🛑 Error (spaces not allowed in name)\n\n\n1_score &lt;- 3.2\n🛑 Error (name can’t start with a number)\n\n\nScoreAtTime1 &lt;- 3.2\n✅ No Error"
  },
  {
    "objectID": "Unit_I/Activities/03a_Activity.html#question-2",
    "href": "Unit_I/Activities/03a_Activity.html#question-2",
    "title": "Lecture [03a] Activity",
    "section": "Question 2",
    "text": "Question 2\n\nUse the cos() function to calculate the cosine of 3 and assign it to a variable called y. Print the value of y to the console.\nUse a function to round y to the nearest whole number.\nUse a function to round y to two decimal places.\n\n\n\n\nClick here for the answer key\n\n\n\n# Part (a)\ny &lt;- cos(3)\ny\n## [1] -0.9899925\n\n# Part (b)\nround(y)\n## [1] -1\n\n# Part (c)\nround(y, digits = 2)\n## [1] -0.99"
  },
  {
    "objectID": "Unit_I/Activities/03a_Activity.html#question-3",
    "href": "Unit_I/Activities/03a_Activity.html#question-3",
    "title": "Lecture [03a] Activity",
    "section": "Question 3",
    "text": "Question 3\nWhat do you expect the result to be for the following commands?\n\nsqrt(4 + 5)\nsqrt(4) + 5\n\nMake your best guesses just by looking at the commands and then check your guesses by running the commands in R.\n\n\n\nClick here for the answer key\n\n\n\n# Part (a): Add then square root, same as sqrt(9)\nsqrt(4 + 5)\n## [1] 3\n\n# Part (b): Square root then add, same as 2 + 5\nsqrt(4) + 5 \n## [1] 7\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/04a_Activity.html#question-1",
    "href": "Unit_I/Activities/04a_Activity.html#question-1",
    "title": "Lecture [04a] Activity",
    "section": "Question 1",
    "text": "Question 1\nThe following table summarizes the season information for the eight seasons of AMC’s Breaking Bad show.\n\nTidy up this data and save it to a tibble. Decide for yourself how to handle season 5 (should it be a single observation or two?). For the first and last aired dates, just store the year as a number.\nSave the tibble you created to a CSV file named “breaking_bad.csv”.\n\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\nVersion with one observation for the season five parts\n\nlibrary(tidyverse)\nseason &lt;- c(1, 2, 3, 4, 5)\nepisodes &lt;- c(7, 13, 13, 13, 16)\nfirst_air &lt;- c(2008, 2009, 2010, 2011, 2012)\nlast_air &lt;- c(2008, 2009, 2010, 2011, 2013)\nnetwork &lt;- \"AMC\"\nbreaking_bad &lt;- \n  tibble(season, episodes, first_air, last_air, network)\nbreaking_bad\n\n# A tibble: 5 × 5\n  season episodes first_air last_air network\n   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;  \n1      1        7      2008     2008 AMC    \n2      2       13      2009     2009 AMC    \n3      3       13      2010     2010 AMC    \n4      4       13      2011     2011 AMC    \n5      5       16      2012     2013 AMC    \n\n\nVersion with two separate observations for the season five parts\n\nlibrary(tidyverse)\nseason &lt;- c(1, 2, 3, 4, 5.1, 5.2)\nepisodes &lt;- c(7, 13, 13, 13, 8, 8)\nfirst_air &lt;- c(2008, 2009, 2010, 2011, 2012, 2013)\nlast_air &lt;- c(2008, 2009, 2010, 2011, 2012, 2013)\nnetwork &lt;- \"AMC\"\nbreaking_bad &lt;- \n  tibble(season, episodes, first_air, last_air, network)\nbreaking_bad\n\n# A tibble: 6 × 5\n  season episodes first_air last_air network\n   &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt; &lt;chr&gt;  \n1    1          7      2008     2008 AMC    \n2    2         13      2009     2009 AMC    \n3    3         13      2010     2010 AMC    \n4    4         13      2011     2011 AMC    \n5    5.1        8      2012     2012 AMC    \n6    5.2        8      2013     2013 AMC    \n\n\nPart (b)\n\nwrite_csv(breaking_bad, \"breaking_bad.csv\")"
  },
  {
    "objectID": "Unit_I/Activities/04a_Activity.html#question-2",
    "href": "Unit_I/Activities/04a_Activity.html#question-2",
    "title": "Lecture [04a] Activity",
    "section": "Question 2",
    "text": "Question 2\nLoad the starwars dataset, which is included in {tidyverse}. This means that, as long as the package is loaded in your session/document, you can just type its name (starwars) and R will be able to access it as if you had imported it.\n\nUse an R command to calculate how many variables and observations are in this tibble.\nUse an R command to extract the height vector from this tibble.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nlibrary(tidyverse)\ndim(starwars)\n\n[1] 87 14\n\n\nThere are 87 rows and 14 columns.\nPart (b)\n\nstarwars$height\n\n [1] 172 167  96 202 150 178 165  97 183 182 188 180 228 180 173 175 170 180  66\n[20] 170 183 200 190 177 175 180 150  NA  88 160 193 191 170 196 224 206 183 137\n[39] 112 183 163 175 180 178  94 122 163 188 198 196 171 184 188 264 188 196 185\n[58] 157 183 183 170 166 165 193 191 183 168 198 229 213 167  79  96 193 191 178\n[77] 216 234 188 178 206  NA  NA  NA  NA  NA 165"
  },
  {
    "objectID": "Unit_I/Activities/04a_Activity.html#question-3",
    "href": "Unit_I/Activities/04a_Activity.html#question-3",
    "title": "Lecture [04a] Activity",
    "section": "Question 3",
    "text": "Question 3\n\nDownload the kaggle_cereal.csv file from Canvas and save it to your class Project folder.\nUse {tidyverse} to import this file into R as a tibble named cereal, using an argument to make the missing values (coded as \"missing\") into NAs.\n\n\n\n\nClick here for the answer key\n\n\nPart (b)\n\ncereal &lt;- read_csv(\"../../data/kaggle_cereal.csv\", na = \"missing\")\ncereal\n\n# A tibble: 77 × 8\n   name                      mfr       type  calories sodium carbo sugars rating\n   &lt;chr&gt;                     &lt;chr&gt;     &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;  &lt;dbl&gt;\n 1 100% Bran                 Nabisco   cold        70    130   5        6   68.4\n 2 100% Natural Bran         Quaker O… cold       120     15   8        8   34.0\n 3 All-Bran                  Kelloggs  cold        70    260   7        5   59.4\n 4 All-Bran with Extra Fiber Kelloggs  cold        50    140   8        0   93.7\n 5 Almond Delight            Ralston … cold       110    200  14        8   34.4\n 6 Apple Cinnamon Cheerios   General … cold       110    180  10.5     10   29.5\n 7 Apple Jacks               Kelloggs  cold       110    125  11       14   33.2\n 8 Basic 4                   General … cold       130    210  18        8   37.0\n 9 Bran Chex                 Ralston … cold        90    200  15        6   49.1\n10 Bran Flakes               Post      cold        90    210  13        5   53.3\n# ℹ 67 more rows\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/05a_Activity.html#question-1",
    "href": "Unit_I/Activities/05a_Activity.html#question-1",
    "title": "Lecture [05a] Activity",
    "section": "Question 1",
    "text": "Question 1\nFor each of the following code snippets, find and fix the error(s).\n\n“The Scatterbrained Scatterplot”\n\n\nggplot(mpg, x = displ, y = hwy) + \n  geom_point()\n\n\n“Not-so-smooth Smoothing”\n\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point()\n  geom_smooth(shape = \"triangle\")\n\n\n“A Leaky Pipeline”\n\n\nggplot(economics, aes(x = date, y = unemploy)) |&gt; \n  geom_point()\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\nThe code forgot to put the mappings inside aes().\n\nlibrary(tidyverse)\nggplot(mpg, aes(x = displ, y = hwy)) +\n  geom_point() \n\n\n\n\nPart (b)\nThe code tried to set the shape aesthetic for the wrong geom (smooths don’t have shapes).\n\nggplot(mpg, aes(x = displ, y = hwy)) + \n  geom_point(shape = \"triangle\") +\n  geom_smooth()\n\n\n\n\nPart (c)\nThe code used pipes instead of plus signs to connect ggplot2 commands.\n\nggplot(economics, aes(x = date, y = unemploy)) +\n  geom_point()"
  },
  {
    "objectID": "Unit_I/Activities/05a_Activity.html#question-2",
    "href": "Unit_I/Activities/05a_Activity.html#question-2",
    "title": "Lecture [05a] Activity",
    "section": "Question 2",
    "text": "Question 2\n\nInstall and load the {palmerpenguins} package.\nRecreate the following graphic as closely as you can from the penguins tibble in that package (don’t worry about getting the point size exactly right).\n\n\n\n\n\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\n# Extra pane &gt; Packages tab &gt; Install button &gt; palmerpenguins &gt; Install\n# Or, in console: install.packages(palmerpenguins)\n\nlibrary(palmerpenguins)\n\nAnswer (b)\n\nggplot(penguins, aes(x = flipper_length_mm, y = bill_length_mm,\n                     color = species, shape = species)) +\n  geom_point(size = 2)"
  },
  {
    "objectID": "Unit_I/Activities/05a_Activity.html#question-3",
    "href": "Unit_I/Activities/05a_Activity.html#question-3",
    "title": "Lecture [05a] Activity",
    "section": "Question 3",
    "text": "Question 3\nCreate a plot from the following text description. Take the penguins dataset (from Question 2) and create a scatterplot where penguins with higher body mass are further to the right on the plot and penguins with higher bill depth are higher on the plot. Color each point based on which island that penguin was observed at and add a smoothing line to show the relationship between body mass and bill depth for each island.\n\n\n\nClick here for the answer key\n\n\n\nggplot(penguins, aes(x = body_mass_g, y = bill_depth_mm, color = island)) + \n  geom_point() +\n  geom_smooth()"
  },
  {
    "objectID": "Unit_I/Activities/05a_Activity.html#fun-stuff",
    "href": "Unit_I/Activities/05a_Activity.html#fun-stuff",
    "title": "Lecture [05a] Activity",
    "section": "Fun Stuff",
    "text": "Fun Stuff\nWould these jokes be more or less funny if he had used {ggplot2}?\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Activities/06a_Activity.html#question-1-code-style",
    "href": "Unit_I/Activities/06a_Activity.html#question-1-code-style",
    "title": "Lecture [06a] Activity",
    "section": "Question 1 (Code Style)",
    "text": "Question 1 (Code Style)\nApply the tidyverse style guide principles to clean up the following code:\n\nlibrary(tidyverse)\ndf &lt;- mpg |&gt; filter(year==2008) |&gt; select(manufacturer , model, class, displ, hwy ) |&gt; \n  mutate (manufacturer=str_to_title(manufacturer), model = str_to_title ( model ),class = str_to_title(class))\nggplot(data = df, mapping = aes(x = hwy, y = class, fill = class)) + \ngeom_vline(xintercept=25, color = \"grey40\", linewidth = 1) +\ngeom_violin(color = \"black\",linewidth = 2 / 3,draw_quantiles = c(0.25,0.50, 0.75),scale = \"count\"\n  )\n\n\n\n\nClick here for the answer key\n\n\nIf you didn’t enjoy this question, imagine what grading in this course is like and let that motivate you to style your code nicely when submitting assignments in the future!\n\nlibrary(tidyverse)\nmpg2008 &lt;- \n  mpg |&gt; \n  filter(year == 2008) |&gt; \n  select(manufacturer, model, class, displ, hwy) |&gt; \n  mutate(\n    manufacturer = str_to_title(manufacturer),\n    model = str_to_title(model),\n    class = str_to_title(class)\n  )\nggplot(mpg2008, aes(x = hwy, y = class, fill = class)) + \n  geom_vline(xintercept = 25, color = \"grey40\", linewidth = 1) +\n  geom_violin(\n    color = \"black\",\n    linewidth = 2 / 3,\n    draw_quantiles = c(0.25, 0.50, 0.75),\n    scale = \"count\"\n  )"
  },
  {
    "objectID": "Unit_I/Activities/06a_Activity.html#question-2-chunk-options",
    "href": "Unit_I/Activities/06a_Activity.html#question-2-chunk-options",
    "title": "Lecture [06a] Activity",
    "section": "Question 2 (Chunk Options)",
    "text": "Question 2 (Chunk Options)\n\nAdjust your code for Q1 to hide the welcome message from the {tidyverse} package.\nAdjust your code for Q1 to make the plot 5 inches tall and 5 inches wide.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\nAdd #| message: false to the top of the chunk\nPart (b)\nAdd #| fig-height: 5 and #| fig-width: 5 to the top of the chunk"
  },
  {
    "objectID": "Unit_I/Activities/06a_Activity.html#question-3-more-quarto",
    "href": "Unit_I/Activities/06a_Activity.html#question-3-more-quarto",
    "title": "Lecture [06a] Activity",
    "section": "Question 3 (More Quarto)",
    "text": "Question 3 (More Quarto)\n\nEmbed the following online video in your document: https://www.youtube.com/embed/hW7DW9NIO9M\nUse MathJax to add an equation (in display mode) to show Einstein’s famous mass-energy equivalence equation: \\(E=mc^2\\)\nChange your document to use the solar HTML theme.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n{{&lt; video https://www.youtube.com/embed/hW7DW9NIO9M &gt;}}\n\nPart (b)\n$$E = m c^{2}$$\n\\[E = m c^{2}\\]\nPart (c)\nformat:\n  html:\n    theme: solar\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#instructions",
    "href": "Unit_I/Assignments/02_Assignment.html#instructions",
    "title": "Week 02 Assignment",
    "section": "Instructions",
    "text": "Instructions\nOpen the Project you created to store your course files in RStudio (if it is already open, skip this part; if you didn’t create a Project already, do so now). Then create a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. Please clearly mark which part of your document is answering which question (e.g., using markdown headers). Please remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#question-1-r-and-rstudio",
    "href": "Unit_I/Assignments/02_Assignment.html#question-1-r-and-rstudio",
    "title": "Week 02 Assignment",
    "section": "Question 1 (R and RStudio)",
    "text": "Question 1 (R and RStudio)\n\nWhy are we using R in this course and not some other programming language?\nWhat are R and RStudio? How are they related and how are they different? Please explain in your own words (i.e., don’t just repeat my car example from lecture)."
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#question-2-console",
    "href": "Unit_I/Assignments/02_Assignment.html#question-2-console",
    "title": "Week 02 Assignment",
    "section": "Question 2 (Console)",
    "text": "Question 2 (Console)\n\nUse R as a calculator to answer the following question: what is negative one plus two-thirds?\nUse R as a calculator to answer the following question: what is the product of 1.234 and five-raised-to-the-sixth-power?"
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#question-3-scripts",
    "href": "Unit_I/Assignments/02_Assignment.html#question-3-scripts",
    "title": "Week 02 Assignment",
    "section": "Question 3 (Scripts)",
    "text": "Question 3 (Scripts)\n\nWhat are the differences between running code in the console, in a script, and in a Quarto document? When might an R user want to use each of these approaches?\nWhat are code comments and when might they be useful? How are code comments in a script different from markdown in a Quarto document?"
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#question-4-projects",
    "href": "Unit_I/Assignments/02_Assignment.html#question-4-projects",
    "title": "Week 02 Assignment",
    "section": "Question 4 (Projects)",
    "text": "Question 4 (Projects)\n\nWhat is the purpose of a Project in RStudio? Why do I recommend creating a project rather than simply saving all your course stuff in a normal computer folder?\nWhat are some benefits of having a consistent naming convention for the files in your project? What kinds of tasks might be easier if you stick with a convention?"
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#question-5-quarto",
    "href": "Unit_I/Assignments/02_Assignment.html#question-5-quarto",
    "title": "Week 02 Assignment",
    "section": "Question 5 (Quarto)",
    "text": "Question 5 (Quarto)\n\nWhat is the difference between a .qmd file and a .html file created by Quarto? When would you send the .qmd file to a collaborator and when would you send the .html file?\nQuarto lets you include many code chunks in the same document. When would you want to put all your code in a single chunk and when would you want to break it up across multiple chunks?"
  },
  {
    "objectID": "Unit_I/Assignments/02_Assignment.html#question-6-markdown",
    "href": "Unit_I/Assignments/02_Assignment.html#question-6-markdown",
    "title": "Week 02 Assignment",
    "section": "Question 6 (Markdown)",
    "text": "Question 6 (Markdown)\n\nUse markdown headings to break your document into sections: one per question. Because Header level 1 is usually used for a document title, I recommend using Header level 2. (Please continue using markdown headings in your future assignments.)\nThe verbatim code format in markdown is really useful when we want to talk about code in text without actually running that code. For instance, I can say that division in R is accomplished using the / symbol as in 1 / 2. Practice using verbatim code by re-writing your code from Question 2a in text here.\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#instructions",
    "href": "Unit_I/Assignments/04_Assignment.html#instructions",
    "title": "Week 04 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#question-1",
    "href": "Unit_I/Assignments/04_Assignment.html#question-1",
    "title": "Week 04 Assignment",
    "section": "Question 1",
    "text": "Question 1\nThe following table summarizes the critical response to HBO’s Game of Thrones show by season (i.e., how much reviewers from the Rotten Tomatoes and Metacritic websites liked that season).\n\n\nWould this data be considered tidy in its present form? Why or why not?\nCreate a new version of this data that would qualify as tidy (i.e., that follows the tidy data principles) and save it in R to a tibble. To facilitate computation, each variable should be numerical. You should ignore the blue numbers in square brackets (these were links to source information).\n\n\n\n\nHint\n\n\nI recommend making it an 8 x 5 tibble. Try to pick good names for the variables that are clear and relatively short!"
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#question-2",
    "href": "Unit_I/Assignments/04_Assignment.html#question-2",
    "title": "Week 04 Assignment",
    "section": "Question 2",
    "text": "Question 2\nCreate a pipeline to take the tibble you created in Question 1 and then add a new variable to it that counts the total number of reviews that each season received (across both websites) and then sort the rows so that the seasons with the most total reviews appear at the top and the seasons with the fewest total reviews appear at the bottom."
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#question-3",
    "href": "Unit_I/Assignments/04_Assignment.html#question-3",
    "title": "Week 04 Assignment",
    "section": "Question 3",
    "text": "Question 3\nThe following table contains information about the 1973 album “The Dark Side of the Moon” by the band Pink Floyd.\n\nList two reasons why this data would not be considered tidy (i.e., what tidy data principles does it violate?)."
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#question-4",
    "href": "Unit_I/Assignments/04_Assignment.html#question-4",
    "title": "Week 04 Assignment",
    "section": "Question 4",
    "text": "Question 4\nCreate a new version of the data from Question 3 that would qualify as tidy (i.e., that follows the tidy data principles) and save it in R to one or more tibbles. Use your best judgment to decide how to resolve the issues (e.g., should this be one or two tibbles?, how should the length variable be stored?, should certain pieces of information be removed from the data?).\n\n\n\nHint\n\n\nThis question is intentionally a bit open-ended because data in the real world is often open-ended. By this, I mean that there is not just one obvious correct answer here, but rather there are different choices you could make. So, just do your best to capture the most important data in a tidy way. Also note that you only need to use skills you learned in this course (e.g., there are ways to store time data in R but we haven’t learned that yet so I don’t expect you to do that here - storing that data as simple numbers or strings would be fine)."
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#question-5",
    "href": "Unit_I/Assignments/04_Assignment.html#question-5",
    "title": "Week 04 Assignment",
    "section": "Question 5",
    "text": "Question 5\nDownload the example4.csv data file from Canvas and read it into R as a tibble. Print it and examine its structure. Your goal in this question is to create a pipeline with wrangling verbs that perfectly recreates the following output from that tibble. (Note that the numbers 1 to 5 in the leftmost column of the output are not part of the tibble; they are just the row numbers and part of how R prints a tibble.)\n\n\n# A tibble: 5 × 2\n     id score\n  &lt;int&gt; &lt;dbl&gt;\n1     1  -0.1\n2     4   2.6\n3     6  -0.3\n4     7   0.2\n5     9  -1.5\n\n\n\n\n\nHint\n\n\nI created this output using two verbs (after reading it in). I can think of at least two ways to accomplish this using what we have learned so far, and both would be acceptable answers."
  },
  {
    "objectID": "Unit_I/Assignments/04_Assignment.html#question-6",
    "href": "Unit_I/Assignments/04_Assignment.html#question-6",
    "title": "Week 04 Assignment",
    "section": "Question 6",
    "text": "Question 6\n\nWhy should we take the time to tidy our data? What might go wrong if we tried to work with non-tidy data in R?\nWhat is a tibble? What are a few advantages of using a tibble rather than, say, separate vector objects?\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#instructions",
    "href": "Unit_I/Assignments/06_Assignment.html#instructions",
    "title": "Week 06 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#question-1",
    "href": "Unit_I/Assignments/06_Assignment.html#question-1",
    "title": "Week 06 Assignment",
    "section": "Question 1",
    "text": "Question 1\n\nDownload the “chocolate.csv” data file from Canvas and add it to your project folder. Then clean up the code chunk below to use the tidyverse style guide.\nAlso add comments to the code explaining why we used filter (i.e., to focus on only the top three countries on some fictitious chocolate leader board) and why the jitter geom was used here (e.g., instead of the point geom).\n\n\nlibrary(tidyverse)\nchocoData&lt;-read_csv(\"chocolate.csv\")|&gt;filter(company_location%in%c(\"Belgium\",\"Switzerland\",\"Italy\"))|&gt;print()\nplot_cocoa&lt;-ggplot(chocoData,aes(x=cocoa_percent,y=rating,color=company_location))+geom_jitter()+geom_smooth(color=\"black\",linewidth=1)\nplot_cocoa"
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#question-2",
    "href": "Unit_I/Assignments/06_Assignment.html#question-2",
    "title": "Week 06 Assignment",
    "section": "Question 2",
    "text": "Question 2\n\nCopy the styled code from Question 1 that created and printed the plot. In this version of the code, adjust the chunk to suppress the ggplot message about the smoothing method and warning about the missing values.\nAlso adjust this chunk to “fold” the code (i.e., hide it by default but allow the user to click on “Code” to see it) and make the figure 4 inches tall and 5 inches wide."
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#question-3",
    "href": "Unit_I/Assignments/06_Assignment.html#question-3",
    "title": "Week 06 Assignment",
    "section": "Question 3",
    "text": "Question 3\n\nWhat do the eval and echo chunk options control? Provide a few examples of a situation in which you would want to set each of these to true or false.\nVisit the page about Quarto HTML Themes and select a theme to apply to your assignment document. Use any theme except the default one (so that we can clearly see whether it worked)."
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#question-4",
    "href": "Unit_I/Assignments/06_Assignment.html#question-4",
    "title": "Week 06 Assignment",
    "section": "Question 4",
    "text": "Question 4\n\nCopy the chunk from Question 2. In this version, modify the code to customize the scales. Set the y-axis limits from 1 to 5 (to reflect the lowest and highest possible scores on the rating scale, respectively).\nAlso change the order of the company locations (in the legend) to reflect their ranking: Belgium first, then Switzerland, then Italy.\nOptional (not graded): Add the following argument to the function that controls the continuous x-axis: labels = scales::percent. This will transform each break’s label to use the percentage format."
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#question-5",
    "href": "Unit_I/Assignments/06_Assignment.html#question-5",
    "title": "Week 06 Assignment",
    "section": "Question 5",
    "text": "Question 5\n\nCopy the chunk from Question 4. In this version, replace the titles of the x, y, and color scales to be “Cocoa Percent”, “Rating”, and “Location”, respectively.\nAlso add a title describing what the plot generally depicts and a subtitle that describes which cocoa percentages are the highest ranked across these three countries."
  },
  {
    "objectID": "Unit_I/Assignments/06_Assignment.html#question-6",
    "href": "Unit_I/Assignments/06_Assignment.html#question-6",
    "title": "Week 06 Assignment",
    "section": "Question 6",
    "text": "Question 6\n\nCopy the chunk from Question 5. In this version, add the “black and white” or bw complete theme and set the base font size to 11.\nAlso adjust the legend to be positioned at the bottom and remove (i.e., “blank”) the minor grid lines.\n\n\n\n\nHint:\n\n\nYour final figure should look something like this.\n\n\n\n\n\n\n\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_I/project_I.html#project-overview",
    "href": "Unit_I/project_I.html#project-overview",
    "title": "Unit I Project",
    "section": "Project Overview",
    "text": "Project Overview\nThe purpose of the Unit I Project is to give you a chance to apply your new data science skills (i.e., programming, wrangling, visualization, and communication) to real-world data that holds some interest for you. You will work as a team of 4-5 students. This will give you an opportunity to develop and hone your collaborative, teamwork skills (e.g., planning, communication, accountability, and mutual support). Each team will work together to create a tidy dataset and Quarto document including text, code, and figures. You will also submit a debriefing document as an individual."
  },
  {
    "objectID": "Unit_I/project_I.html#topic-areas",
    "href": "Unit_I/project_I.html#topic-areas",
    "title": "Unit I Project",
    "section": "Topic Areas",
    "text": "Topic Areas\n\nSocial Sciences - any topic related to human behaviors and societies\nExamples: languages, wellbeing, spending, etc.\nLife Sciences - any topic related to living organisms (large and small)\nExamples: animals, plants, crops, habitats, etc.\nPhysical Sciences - any topic related to inanimate natural objects\nExamples: climate, oceans, stars, elements, etc.\nMedical Sciences - any topic related to health and medicine\nExamples: diseases, treatments, prevention, etc.\nSports - any topic related to competitive physical activity or gaming\nExamples: games, players, coaches, records, etc.\nEntertainment - any topic related to pop culture and entertainment\nExamples: books, characters, albums, films, etc.\nFood and Drink - any topic related to nutrition and consumption\nExamples: restaurants, menus, awards, wine, etc.\nPolitics and History - any topic related to governance and past events\nExamples: voting, approval, development, events, etc."
  },
  {
    "objectID": "Unit_I/project_I.html#project-components",
    "href": "Unit_I/project_I.html#project-components",
    "title": "Unit I Project",
    "section": "Project Components",
    "text": "Project Components\n\nThe Planning Document (due at the end of week 1, submitted as a team)\nThe Report Document (due at the end of week 2, submitted as a team)\nThe Debriefing Document (due at the end of week 2, submitted as an individual)"
  },
  {
    "objectID": "Unit_I/project_I.html#planning-document",
    "href": "Unit_I/project_I.html#planning-document",
    "title": "Unit I Project",
    "section": "Planning Document",
    "text": "Planning Document\nYour team will need to submit a planning document at the end of the first week. This plan can be any kind of text document (e.g., docx or markdown) and should include the names of all team members, a description of what the team accomplished during the first week, what the team plans to accomplish during the second week, how the team plans to handle communication and collaboration, and a timeline with assigned tasks and rough deadlines."
  },
  {
    "objectID": "Unit_I/project_I.html#report-document",
    "href": "Unit_I/project_I.html#report-document",
    "title": "Unit I Project",
    "section": "Report Document",
    "text": "Report Document\nThe main product of the project is a report document that your team will need to submit at the end of the second week. It should be a Quarto HTML document that describes the dataset your team designed, several polished figures showing off the dataset, and some text describing insights your team gathered from the dataset and visualizations.\n\nData Design\nFirst, as a team, create a new dataset relevant to your topic area from online sources. It should have at least 100 observations (20-25 per team member) and 4-5 variables (including both numbers and strings as well as discrete and continuous values). You are also welcome to add more observations than 100 if you want to, but doing so isn’t necessary.\n\nDecide on a data source. Where will your data come from? Good sources include Wikipedia articles, specialty websites about your topic area, or your own data collection efforts.\nDesign your dataset. What will each observation (row) represent? What variables (columns) will you include? What will the variables be named? What type of data will be stored in each variable? How will missing values be handled?\nCreate a CSV for your dataset. Create a spreadsheet document (Google Sheets would allow your whole team to work on it remotely, view this video for a tutorial on how to do so) and set it up to match your design from Step 2. Start filling in the data points as a team. Once you’re done, save/download the spreadsheet as a CSV file to later load into R (in Google Sheets, do this with File &gt; Download &gt; Comma-separated values).\nImport the dataset. Read the CSV file from Step 3 into R as a tibble. Make sure everything read in properly and that all missing values are set to NA. If desired, use mutate() to calculate one or more new variables from your existing variables.\n\n\n\nVisualization\nSecond, as a team, create one figure per team member to visualize variables and/or relationships in your dataset. These figures should be interesting and well-polished. The goal is to learn something about your topic and tell a simple story about your data through these figures.\n\nDecide on your figures. What variables and/or relationships are the most interesting? Which are most likely to yield conclusions and insights?\nDecide your aesthetic mappings. Which variables should be mapped to which aesthetics? Which aesthetics work best with which data types?\nSelect your geometric objects. Which geometric objects should represent your data points? Which geoms tell an interesting story about your data?\nCreate your figures. Implement your designs from Steps 1 to 3 in R using ggplot2, creating separate figure objects.\nPolish your figures. Adjust your scales and aesthetic settings to make them look good. Add some labels and customize the theme.\n\n\n\nCommunication\nThird, as a team, describe your project in a Quarto document with the following sections:\n\nOverview - In text, give a brief introduction to your project. Describe what your project is about (i.e., what was your topic area and what specific subtopic did you pick) and why it was interesting to your team.\nWrangling - In text, describe the process of finding your data source(s), designing the dataset, creating your CSV, and importing the data. Also define every variable in your dataset and, when applicable, including information about units or possible categories. Include R chunks for anything you did in R and print the tibble containing your dataset so that readers can see it.\nVisualization - In text, describe the process of deciding on your figures, aesthetic mappings, and geometric objects. Include R chunks for creating the figures and print the figures so that readers can see them.\nConclusions - In text, describe a few conclusions or insights into your topic area that your project and visualizations helped you to discover and think more deeply about."
  },
  {
    "objectID": "Unit_I/project_I.html#debriefing-document",
    "href": "Unit_I/project_I.html#debriefing-document",
    "title": "Unit I Project",
    "section": "Debriefing Document",
    "text": "Debriefing Document\nFinally, as an individual, write a brief (3-6 sentence) answer to each of the following questions. You can use any format for this report (e.g., Word).\n\nWhat did you contribute to the project?\nExamples: What tasks did you help complete and how? What ideas did you help brainstorm and evaluate? What decisions did you help make?\nWhat did you learn about doing data science with real-world data?\nExamples: How does real-world data differ from examples from class? What is it like to have to collect your own data? What challenges came up?\nWhat did you learn about working in a data science team?\nExamples: What parts were easier or harder than you anticipated? What worked and what didn’t as a team? How can you improve as a teammate?\nHow much did each teammate contribute and use teamwork skills?\nPlease describe each teammate separately and describe their contributions and teamwork skills (good or bad). Your answers will be kept confidential."
  },
  {
    "objectID": "Unit_I/project_I.html#evaluation",
    "href": "Unit_I/project_I.html#evaluation",
    "title": "Unit I Project",
    "section": "Evaluation",
    "text": "Evaluation\nI will evaluate the projects with the following grading rubric (20 pts total).\n\nTeam: Plan (2 pts total)\nTeam: Data Design (4 pts total)\nTeam: Visualization (5 pts total)\nTeam: Communication (5 pts total)\nIndividual: Report (4 pts total)"
  },
  {
    "objectID": "Unit_I/week_02.html",
    "href": "Unit_I/week_02.html",
    "title": "Week 2: Overview",
    "section": "",
    "text": "R and RStudio\nConsole\nScripts\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [02a]"
  },
  {
    "objectID": "Unit_I/week_02.html#a-meeting-r",
    "href": "Unit_I/week_02.html#a-meeting-r",
    "title": "Week 2: Overview",
    "section": "",
    "text": "R and RStudio\nConsole\nScripts\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [02a]"
  },
  {
    "objectID": "Unit_I/week_02.html#b-getting-organized",
    "href": "Unit_I/week_02.html#b-getting-organized",
    "title": "Week 2: Overview",
    "section": "[02b] Getting Organized",
    "text": "[02b] Getting Organized\n\nTopics\n\nProjects\nQuarto\nMarkdown\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nActivity\n\nActivity [02b]\n\n\n\nOptional Readings\n\nHello, Quarto Getting Started with RStudio Guide\nMarkdown Basics"
  },
  {
    "objectID": "Unit_I/week_02.html#week-2-assignment",
    "href": "Unit_I/week_02.html#week-2-assignment",
    "title": "Week 2: Overview",
    "section": "Week 2 Assignment",
    "text": "Week 2 Assignment\n\nInstructions\n\nWeek 2 Assignment"
  },
  {
    "objectID": "Unit_I/week_04.html",
    "href": "Unit_I/week_04.html",
    "title": "Week 4: Wrangle",
    "section": "",
    "text": "Principles\nTibbles\nData Files\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nkaggle_cereal.csv\n\n\n\n\n\nActivity [04a]"
  },
  {
    "objectID": "Unit_I/week_04.html#a-tidy-data",
    "href": "Unit_I/week_04.html#a-tidy-data",
    "title": "Week 4: Wrangle",
    "section": "",
    "text": "Principles\nTibbles\nData Files\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nkaggle_cereal.csv\n\n\n\n\n\nActivity [04a]"
  },
  {
    "objectID": "Unit_I/week_04.html#b-dplyr-basics",
    "href": "Unit_I/week_04.html#b-dplyr-basics",
    "title": "Week 4: Wrangle",
    "section": "[04b] dplyr Basics",
    "text": "[04b] dplyr Basics\n\nTopics\n\nColumn verbs\nRow verbs\nPipelines\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nData Files\n\nkaggle_cereal.csv\n\n\n\nActivity\n\nActivity [04b]"
  },
  {
    "objectID": "Unit_I/week_04.html#week-4-assignment",
    "href": "Unit_I/week_04.html#week-4-assignment",
    "title": "Week 4: Wrangle",
    "section": "Week 4 Assignment",
    "text": "Week 4 Assignment\n\nInstructions\n\nWeek 4 Assignment\n\n\n\nData Files\n\nexample4.csv"
  },
  {
    "objectID": "Unit_I/week_06.html",
    "href": "Unit_I/week_06.html",
    "title": "Week 6: Communicate",
    "section": "",
    "text": "Code Style\nCode Chunks\nMore Quarto\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [06a]\n\n\n\n\n\nhttps://style.tidyverse.org/\nhttps://quarto.org/docs/guide/"
  },
  {
    "objectID": "Unit_I/week_06.html#a-program-to-communicate",
    "href": "Unit_I/week_06.html#a-program-to-communicate",
    "title": "Week 6: Communicate",
    "section": "",
    "text": "Code Style\nCode Chunks\nMore Quarto\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [06a]\n\n\n\n\n\nhttps://style.tidyverse.org/\nhttps://quarto.org/docs/guide/"
  },
  {
    "objectID": "Unit_I/week_06.html#b-visualize-to-communicate",
    "href": "Unit_I/week_06.html#b-visualize-to-communicate",
    "title": "Week 6: Communicate",
    "section": "[06b] Visualize to Communicate",
    "text": "[06b] Visualize to Communicate\n\nTopics\n\nScales\nLabels\nThemes\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nActivity\n\nActivity [06b]\n\n\n\nOptional Readings\n\nhttps://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf\nhttps://r4ds.had.co.nz/graphics-for-communication.html\nhttps://ggplot2-book.org/polishing.html"
  },
  {
    "objectID": "Unit_I/week_06.html#week-6-assignment",
    "href": "Unit_I/week_06.html#week-6-assignment",
    "title": "Week 6: Communicate",
    "section": "Week 6 Assignment",
    "text": "Week 6 Assignment\n\nInstructions\n\nWeek 6 Assignment\n\n\n\nData Files\n\nchocolate.csv"
  },
  {
    "objectID": "Unit_II/Activities/10b_Activity.html#question-1-tidy-selection",
    "href": "Unit_II/Activities/10b_Activity.html#question-1-tidy-selection",
    "title": "Lecture [10b] Activity",
    "section": "Question 1 (Tidy Selection)",
    "text": "Question 1 (Tidy Selection)\n\nUse tidy selection to extract all variables that have names ending with “_color” from the starwars tibble.\nUse tidy selection to extract the name variable and all variables from the species variable to the last variable in the starwars tibble.\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\nlibrary(tidyverse)\nstarwars |&gt; \n  select(ends_with(\"_color\"))\n\n# A tibble: 87 × 3\n   hair_color    skin_color  eye_color\n   &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;    \n 1 blond         fair        blue     \n 2 &lt;NA&gt;          gold        yellow   \n 3 &lt;NA&gt;          white, blue red      \n 4 none          white       yellow   \n 5 brown         light       brown    \n 6 brown, grey   light       blue     \n 7 brown         light       blue     \n 8 &lt;NA&gt;          white, red  red      \n 9 black         light       brown    \n10 auburn, white fair        blue-gray\n# ℹ 77 more rows\n\n\nAnswer (b)\n\nstarwars |&gt; \n  select(name, species:last_col())\n\n# A tibble: 87 × 5\n   name               species films     vehicles  starships\n   &lt;chr&gt;              &lt;chr&gt;   &lt;list&gt;    &lt;list&gt;    &lt;list&gt;   \n 1 Luke Skywalker     Human   &lt;chr [5]&gt; &lt;chr [2]&gt; &lt;chr [2]&gt;\n 2 C-3PO              Droid   &lt;chr [6]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n 3 R2-D2              Droid   &lt;chr [7]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n 4 Darth Vader        Human   &lt;chr [4]&gt; &lt;chr [0]&gt; &lt;chr [1]&gt;\n 5 Leia Organa        Human   &lt;chr [5]&gt; &lt;chr [1]&gt; &lt;chr [0]&gt;\n 6 Owen Lars          Human   &lt;chr [3]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n 7 Beru Whitesun lars Human   &lt;chr [3]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n 8 R5-D4              Droid   &lt;chr [1]&gt; &lt;chr [0]&gt; &lt;chr [0]&gt;\n 9 Biggs Darklighter  Human   &lt;chr [1]&gt; &lt;chr [0]&gt; &lt;chr [1]&gt;\n10 Obi-Wan Kenobi     Human   &lt;chr [6]&gt; &lt;chr [1]&gt; &lt;chr [5]&gt;\n# ℹ 77 more rows"
  },
  {
    "objectID": "Unit_II/Activities/10b_Activity.html#question-2-across",
    "href": "Unit_II/Activities/10b_Activity.html#question-2-across",
    "title": "Lecture [10b] Activity",
    "section": "Question 2 (Across)",
    "text": "Question 2 (Across)\n\nUse across() to apply the str_to_upper() function to the manufacturer and model variables of the mpg tibble.\nUse across() to summarize the median of every numeric variable in the diamonds tibble.\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\nmpg |&gt; \n  mutate(\n    across(\n      .cols = c(manufacturer, model), \n      .fns = str_to_upper\n    )\n  )\n\n# A tibble: 234 × 11\n   manufacturer model      displ  year   cyl trans drv     cty   hwy fl    class\n   &lt;chr&gt;        &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;chr&gt;\n 1 AUDI         A4           1.8  1999     4 auto… f        18    29 p     comp…\n 2 AUDI         A4           1.8  1999     4 manu… f        21    29 p     comp…\n 3 AUDI         A4           2    2008     4 manu… f        20    31 p     comp…\n 4 AUDI         A4           2    2008     4 auto… f        21    30 p     comp…\n 5 AUDI         A4           2.8  1999     6 auto… f        16    26 p     comp…\n 6 AUDI         A4           2.8  1999     6 manu… f        18    26 p     comp…\n 7 AUDI         A4           3.1  2008     6 auto… f        18    27 p     comp…\n 8 AUDI         A4 QUATTRO   1.8  1999     4 manu… 4        18    26 p     comp…\n 9 AUDI         A4 QUATTRO   1.8  1999     4 auto… 4        16    25 p     comp…\n10 AUDI         A4 QUATTRO   2    2008     4 manu… 4        20    28 p     comp…\n# ℹ 224 more rows\n\n\nAnswer (b)\n\ndiamonds |&gt; \n  summarize(\n    across(\n      .cols = where(is.numeric), \n      .fns = median\n    )\n  )\n\n# A tibble: 1 × 7\n  carat depth table price     x     y     z\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1   0.7  61.8    57  2401   5.7  5.71  3.53"
  },
  {
    "objectID": "Unit_II/Activities/10b_Activity.html#question-3-scale-scores",
    "href": "Unit_II/Activities/10b_Activity.html#question-3-scale-scores",
    "title": "Lecture [10b] Activity",
    "section": "Question 3 (Scale Scores)",
    "text": "Question 3 (Scale Scores)\n\nAdd a new column to the diamonds tibble called volume that contains the rectangular volume of each diamond (i.e., the product or multiplication of the x, y, and z variables)\nAdd a new column to the diamonds tibble called mdim that contains the average dimension size of each diamond (i.e., the mean of the x, y, and z variables)\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\ndiamonds |&gt; \n  mutate(volume = x * y * z)\n\n# A tibble: 53,940 × 11\n   carat cut       color clarity depth table price     x     y     z volume\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43   38.2\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31   34.5\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31   38.1\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63   46.7\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75   51.9\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48   38.7\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47   38.8\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53   42.3\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49   36.4\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39   38.7\n# ℹ 53,930 more rows\n\n\nAnswer (b)\n\ndiamonds |&gt; \n  mutate(mdim = rowMeans(pick(x, y, z)))\n\n# A tibble: 53,940 × 11\n   carat cut       color clarity depth table price     x     y     z  mdim\n   &lt;dbl&gt; &lt;ord&gt;     &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43  3.45\n 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31  3.35\n 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31  3.48\n 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63  3.69\n 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75  3.81\n 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48  3.46\n 7  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47  3.47\n 8  0.26 Very Good H     SI1      61.9    55   337  4.07  4.11  2.53  3.57\n 9  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49  3.38\n10  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39  3.48\n# ℹ 53,930 more rows\n\n\nAlternate Answer (b)\n\ndiamonds |&gt; \n  # Create row identifier\n  mutate(row_id = row_number()) |&gt; \n  # Mutate while grouping by it\n  mutate(\n    mdim = mean(c(x, y, z)),\n    .by = row_id\n  )\n\n# A tibble: 53,940 × 12\n   carat cut      color clarity depth table price     x     y     z row_id  mdim\n   &lt;dbl&gt; &lt;ord&gt;    &lt;ord&gt; &lt;ord&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;  &lt;int&gt; &lt;dbl&gt;\n 1  0.23 Ideal    E     SI2      61.5    55   326  3.95  3.98  2.43      1  3.45\n 2  0.21 Premium  E     SI1      59.8    61   326  3.89  3.84  2.31      2  3.35\n 3  0.23 Good     E     VS1      56.9    65   327  4.05  4.07  2.31      3  3.48\n 4  0.29 Premium  I     VS2      62.4    58   334  4.2   4.23  2.63      4  3.69\n 5  0.31 Good     J     SI2      63.3    58   335  4.34  4.35  2.75      5  3.81\n 6  0.24 Very Go… J     VVS2     62.8    57   336  3.94  3.96  2.48      6  3.46\n 7  0.24 Very Go… I     VVS1     62.3    57   336  3.95  3.98  2.47      7  3.47\n 8  0.26 Very Go… H     SI1      61.9    55   337  4.07  4.11  2.53      8  3.57\n 9  0.22 Fair     E     VS2      65.1    61   337  3.87  3.78  2.49      9  3.38\n10  0.23 Very Go… H     VS1      59.4    61   338  4     4.05  2.39     10  3.48\n# ℹ 53,930 more rows"
  },
  {
    "objectID": "Unit_II/Activities/10b_Activity.html#challenge-question",
    "href": "Unit_II/Activities/10b_Activity.html#challenge-question",
    "title": "Lecture [10b] Activity",
    "section": "Challenge Question",
    "text": "Challenge Question\n\nLook at the code below and figure out how it works.\nAdapt this code to create four new variables called carat_minimum, carat_maximum, price_minimum, and price_maximum.\n\n\ndiamonds |&gt; \n  summarize(\n    across(\n      .cols = c(carat, price),\n      .fns = list(m = mean, s = sd),\n      .names = \"{.fn}_{.col}\"\n    )\n  )\n\n# A tibble: 1 × 4\n  m_carat s_carat m_price s_price\n    &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1   0.798   0.474   3933.   3989.\n\n\n\n\n\nClick here for the answer key\n\n\n\ndiamonds |&gt; \n  summarize(\n    across(\n      .cols = c(carat, price),\n      .fns = list(minimum = min, maximum = max),\n      .names = \"{.col}_{.fn}\"\n    )\n  )\n\n# A tibble: 1 × 4\n  carat_minimum carat_maximum price_minimum price_maximum\n          &lt;dbl&gt;         &lt;dbl&gt;         &lt;int&gt;         &lt;int&gt;\n1           0.2          5.01           326         18823\n\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Activities/11b_Activity.html#question-1",
    "href": "Unit_II/Activities/11b_Activity.html#question-1",
    "title": "Lecture [11b] Activity",
    "section": "Question 1",
    "text": "Question 1\nInstall and load the {Lahman} package, which contains data about baseball teams and players.\n\nExplore how the People, Batting, and Salaries tables are connected.\nHow would you join this data to compare the salaries of right-handed and left-handed batters? Do so using a {tidyverse} function and select only the relevant variables.\n\nNote: These tables are data frames not tibbles (so they will print a lot of rows). To fix this, you can use as_tibble() to convert them to tibbles.\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\nAll three tables are connected via the playerID variable.\nAnswer (b)\n\nlibrary(tidyverse)\nlibrary(Lahman) # must be installed first\n\njoined_data &lt;- \n  inner_join(People, Salaries, by = \"playerID\") |&gt;  \n  select(playerID, nameFirst, nameLast, bats, yearID, teamID, salary) |&gt;\n  as_tibble() |&gt; \n  print()\n\n# A tibble: 26,428 × 7\n   playerID  nameFirst nameLast bats  yearID teamID  salary\n   &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;    &lt;fct&gt;  &lt;int&gt; &lt;fct&gt;    &lt;int&gt;\n 1 aardsda01 David     Aardsma  R       2004 SFN     300000\n 2 aardsda01 David     Aardsma  R       2007 CHA     387500\n 3 aardsda01 David     Aardsma  R       2008 BOS     403250\n 4 aardsda01 David     Aardsma  R       2009 SEA     419000\n 5 aardsda01 David     Aardsma  R       2010 SEA    2750000\n 6 aardsda01 David     Aardsma  R       2011 SEA    4500000\n 7 aardsda01 David     Aardsma  R       2012 NYA     500000\n 8 aasedo01  Don       Aase     R       1986 BAL     600000\n 9 aasedo01  Don       Aase     R       1987 BAL     625000\n10 aasedo01  Don       Aase     R       1988 BAL     675000\n# ℹ 26,418 more rows"
  },
  {
    "objectID": "Unit_II/Activities/11b_Activity.html#question-2",
    "href": "Unit_II/Activities/11b_Activity.html#question-2",
    "title": "Lecture [11b] Activity",
    "section": "Question 2",
    "text": "Question 2\n\nJoin the band_members and band_instruments tibbles (included in {tidyverse}) using all four basic types of joins. Compare the results.\nNow join the band_members and band_instruments2 tibbles in a way that adds the instrument played by each name in band_members.\n\n\n\n\nClick here for the answer key\n\n\nAnswer (a)\n\nleft_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 3 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n\nright_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 3 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n3 Keith &lt;NA&gt;    guitar\n\ninner_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 2 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 John  Beatles guitar\n2 Paul  Beatles bass  \n\nfull_join(band_members, band_instruments, by = \"name\")\n\n# A tibble: 4 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass  \n4 Keith &lt;NA&gt;    guitar\n\n\nAnswer (b)\n\nleft_join(band_members, band_instruments2, by = c(\"name\" = \"artist\"))\n\n# A tibble: 3 × 3\n  name  band    plays \n  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt; \n1 Mick  Stones  &lt;NA&gt;  \n2 John  Beatles guitar\n3 Paul  Beatles bass"
  },
  {
    "objectID": "Unit_II/Activities/11b_Activity.html#question-3",
    "href": "Unit_II/Activities/11b_Activity.html#question-3",
    "title": "Lecture [11b] Activity",
    "section": "Question 3",
    "text": "Question 3\nExplore what happens when you join two tables with duplicated/repeated keys.\n\nx &lt;- tibble(\n  key = c(1, 2, 2, 3),\n  val_x = c(\"x1\", \"x2\", \"x3\", \"x4\")\n)\ny &lt;- tibble(\n  key = c(1, 2, 2, 3),\n  val_y = c(\"y1\", \"y2\", \"y3\", \"y4\")\n)\n\n\n\n\nClick here for the answer key\n\n\n\nleft_join(x, y, by = \"key\")\n\nWarning in left_join(x, y, by = \"key\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 2 of `x` matches multiple rows in `y`.\nℹ Row 2 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\n# A tibble: 6 × 3\n    key val_x val_y\n  &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;\n1     1 x1    y1   \n2     2 x2    y2   \n3     2 x2    y3   \n4     2 x3    y2   \n5     2 x3    y3   \n6     3 x4    y4   \n\n\nThe key gets duplicated for each pairwise combination.\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Activities/12b_Activity.html#question-1",
    "href": "Unit_II/Activities/12b_Activity.html#question-1",
    "title": "Lecture [12b] Activity",
    "section": "Question 1",
    "text": "Question 1\nI am interested in buying a used SUV from 2008. Filter the mpg dataset to only include cars from that year and then create a jittered scatterplot with hwy on x and cty on y. Highlight in red the cars that are from the “suv” class.\n\n\n\nClick here for the answer key\n\n\n\nlibrary(tidyverse)\nlibrary(gghighlight)\n\nmpg |&gt; \n  filter(year == 2008) |&gt; \n  ggplot(aes(x = hwy, y = cty)) +\n  geom_jitter(color = \"red\") +\n  gghighlight(class == \"suv\")"
  },
  {
    "objectID": "Unit_II/Activities/12b_Activity.html#question-2",
    "href": "Unit_II/Activities/12b_Activity.html#question-2",
    "title": "Lecture [12b] Activity",
    "section": "Question 2",
    "text": "Question 2\nRecreate this figure from mpg using {ggplot2} and {patchwork}. Hint: The geoms (left-to-right) are density, bar, density, boxplot, boxplot.\nBonus: Make the top row half the height of the bottom row and add tags “a” to “e”.\n\n\n\n\n\n\n\n\nClick here for the answer key\n\n\n\nlibrary(patchwork)\np1 &lt;- ggplot(mpg, aes(x = hwy)) + geom_density()\np2 &lt;- ggplot(mpg, aes(x = drv)) + geom_bar()\np3 &lt;- ggplot(mpg, aes(x = cty)) + geom_density()\np4 &lt;- ggplot(mpg, aes(x = drv, y = hwy)) + geom_boxplot()\np5 &lt;- ggplot(mpg, aes(x = drv, y = cty)) + geom_boxplot()\n((p1 + p2 + p3) / (p4 + p5))\n\n\n\n\nBonus\n\n((p1 + p2 + p3) / (p4 + p5)) + \n  plot_layout(heights = c(1, 2)) +\n  plot_annotation(tag_levels = \"a\")"
  },
  {
    "objectID": "Unit_II/Activities/12b_Activity.html#question-3",
    "href": "Unit_II/Activities/12b_Activity.html#question-3",
    "title": "Lecture [12b] Activity",
    "section": "Question 3",
    "text": "Question 3\nCreate a document in PowerPoint (or equivalent program, e.g., Google Slides) and draw a box where you would put a figure. Examine that box’s size and save a ggplot in that same size. Insert your image into PowerPoint.\nBonus: Adjust the font size of your plot to be more readable in PowerPoint.\n\n# Simple example plot\nggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\n\n\n\n\nClick here for the answer key\n\n\n\np &lt;- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point()\nggsave(\"act3a.png\", plot = p, width = 5, height = 3, units = \"in\")\n\nBonus\n\np &lt;- ggplot(mpg, aes(x = displ, y = hwy)) + geom_point() +\n  theme_grey(base_size = 18)\nggsave(\"act3b.png\", plot = p, width = 5, height = 3, units = \"in\")\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Activities/13b_Activity.html#question-1",
    "href": "Unit_II/Activities/13b_Activity.html#question-1",
    "title": "Lecture [13b] Activity",
    "section": "Question 1",
    "text": "Question 1\n\nUse if_else() to add a new variable to mpg called size that equals “LARGE” if class is “suv”, “minivan”, or “pickup” and equals “SMALL” otherwise. Then select the model, class, and size variables.\nFor practice, repeat the first part of this question but this time use case_when(). Is the Subaru Forester AWD model LARGE or SMALL?\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nlibrary(tidyverse)\n\nmpg |&gt; \n  mutate(\n    size = if_else(\n      condition = class %in% c(\"suv\", \"minivan\", \"pickup\"),\n      true = \"LARGE\",\n      false = \"SMALL\"\n    )\n  ) |&gt; \n  select(model, class, size)\n\n# A tibble: 234 × 3\n   model      class   size \n   &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;\n 1 a4         compact SMALL\n 2 a4         compact SMALL\n 3 a4         compact SMALL\n 4 a4         compact SMALL\n 5 a4         compact SMALL\n 6 a4         compact SMALL\n 7 a4         compact SMALL\n 8 a4 quattro compact SMALL\n 9 a4 quattro compact SMALL\n10 a4 quattro compact SMALL\n# ℹ 224 more rows\n\n\nPart (b)\n\nmpg |&gt; \n  mutate(\n    size = case_when(\n      class == \"suv\" ~ \"LARGE\",\n      class == \"minivan\" ~ \"LARGE\",\n      class == \"pickup\" ~ \"LARGE\",\n      .default = \"SMALL\"\n    )\n  ) |&gt; \n  select(model, class, size) |&gt; \n  filter(model == \"forester awd\")\n\n# A tibble: 6 × 3\n  model        class size \n  &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;\n1 forester awd suv   LARGE\n2 forester awd suv   LARGE\n3 forester awd suv   LARGE\n4 forester awd suv   LARGE\n5 forester awd suv   LARGE\n6 forester awd suv   LARGE\n\n\nThe Subaru Forester AWD is LARGE."
  },
  {
    "objectID": "Unit_II/Activities/13b_Activity.html#question-2",
    "href": "Unit_II/Activities/13b_Activity.html#question-2",
    "title": "Lecture [13b] Activity",
    "section": "Question 2",
    "text": "Question 2\n\nCreate a custom function called nroot that takes in two arguments, x and n, and returns the value of x raised to the power of (1 / n). Test your function by calculating the cube-root of 343 (i.e., set n to 3).\nSet the default value for the n argument to be 2 (i.e., make nroot(x) equal to sqrt(x) by default). Test this default by calculating the square root of 121 using your function but without specifying n.\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\nnroot &lt;- function(x, n) {\n  x ^ (1 / n)\n}\n\nnroot(343, n = 3)\n\n[1] 7\n\n\nPart (b)\n\nnroot &lt;- function(x, n = 2) {\n  x ^ (1 / n)\n}\n\nnroot(121)\n\n[1] 11"
  },
  {
    "objectID": "Unit_II/Activities/13b_Activity.html#challenge",
    "href": "Unit_II/Activities/13b_Activity.html#challenge",
    "title": "Lecture [13b] Activity",
    "section": "Challenge",
    "text": "Challenge\n\nUse $ operator to extract the vector of country names from the population tibble (included in {tidyverse}). Then use the unique() function on this vector so that each country name is only included once.\nCreate a custom function that filters population to only include the data from a single country (specified by an argument) and then writes the results to a separate csv data file named after that country.\nTest your function on one country and, once it is working, use walk() to apply this function to the vector of all countries created in part (a).\n\n\n\n\nClick here for the answer key\n\n\nPart (a)\n\ncountries &lt;- unique(population$country)\n\nPart (b)\n\nsave_country_data &lt;- function(country_name) {\n  df &lt;- population |&gt; filter(country == country_name)\n  csv_filename &lt;- str_glue(\"data/{country_name}.csv\")\n  write_csv(df, csv_filename)\n}\n\nPart (c)\n\nsave_country_data(\"China\")\nwalk(.x = countries, .f = save_country_data)\n\n\n\n\n\nNote that there is no need to turn in Activities. These are just for practice!"
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#instructions",
    "href": "Unit_II/Assignments/11_Assignment.html#instructions",
    "title": "Week 11 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#question-1",
    "href": "Unit_II/Assignments/11_Assignment.html#question-1",
    "title": "Week 11 Assignment",
    "section": "Question 1",
    "text": "Question 1\nFor each question in this section, read what the user wanted to do, look at their code (which didn’t work as intended), and fix it for them.\n\nI want each row to contain the number of cases and the population of a single country in a single year.\n\n\ntable2 |&gt;  \n  pivot_longer(\n    names_from = type,\n    values_from = count\n  )\n\n\n\n\nHint\n\n\ntable2 is a real tibble included in tidyverse. This is what the output should look like:\n\n\n# A tibble: 6 × 4\n  country      year  cases population\n  &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n1 Afghanistan  1999    745   19987071\n2 Afghanistan  2000   2666   20595360\n3 Brazil       1999  37737  172006362\n4 Brazil       2000  80488  174504898\n5 China        1999 212258 1272915272\n6 China        2000 213766 1280428583\n\n\n\n\n\n\nI want a tibble that contains all the sales and also includes the name of the customer who was involved in those sales (if available).\n\n\ncustomers &lt;- tibble(\n  id = 1:4, \n  name = c(\"Bennie Factor\", \"Joe King\", \"Jack Pott\", \"Kay Oss\")\n)\n\nsales &lt;- tibble(\n  date = c(\"01/10\", \"01/10\", \"01/15\", \"01/19\", \"01/22\", \"01/23\"),\n  customer = c(1, 3, 5, 3, 3, 1),\n  amount = c(120.78, 224.31, 133.84, 201.22, 263.72, 199.84)\n)\n\ninner_join(\n  x = sales, \n  y = customers, \n  by = \"id\"\n)\n\n\n\n\nHint\n\n\nThis is what the output should look like:\n\n\n# A tibble: 6 × 4\n  date  customer amount name         \n  &lt;chr&gt;    &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;        \n1 01/10        1   121. Bennie Factor\n2 01/10        3   224. Jack Pott    \n3 01/15        5   134. &lt;NA&gt;         \n4 01/19        3   201. Jack Pott    \n5 01/22        3   264. Jack Pott    \n6 01/23        1   200. Bennie Factor"
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#question-2",
    "href": "Unit_II/Assignments/11_Assignment.html#question-2",
    "title": "Week 11 Assignment",
    "section": "Question 2",
    "text": "Question 2\nImport the couples.rds file (available on Canvas) into R and examine its contents. Note that it is an RDS file not a CSV file, so you should use read_rds() to import it.\nThis file contains simulated/fake data from a study of 30 couples in which one member has a chronic illness. The satisfaction variable contains two numbers separated by a semi-colon. The first number is the life satisfaction rating of the “index” or member with a chronic illness, and the second number is the life satisfaction rating of the “partner” or member without a chronic illness.\n\nImport the couples.rds data file and separate the satisfaction variable into two variables named index and partner.\nThen use mutate() to convert these two new variables from strings to numbers and save the output to use in later questions.\n\n\n\n\nHint\n\n\nYour output should look like:\n\n\n# A tibble: 30 × 4\n   couple years_together index partner\n   &lt;chr&gt;           &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n 1 001              16.9 -0.86   -0.58\n 2 002              16.5 -1.62   -0.71\n 3 003               9.5 -0.7     2.34\n 4 004               9.3  3.04    4.06\n 5 005               1   -0.13    1.28\n 6 006              18.6 -0.53    0.9 \n 7 007              19.7 -0.82    0.89\n 8 008              13.9 -1.03    1.42\n 9 009              23.8 -1.51    0.17\n10 010              15.6 -0.47    1.11\n# ℹ 20 more rows"
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#question-3",
    "href": "Unit_II/Assignments/11_Assignment.html#question-3",
    "title": "Week 11 Assignment",
    "section": "Question 3",
    "text": "Question 3\n\nReshape the data from the previous question such that each row contains the data from a single individual (with variables for couple, years_together, member, and satisfaction). Save the output to use for the next question.\nCreate a new variable called id that uniquely identifies each individual participant in the tibble created in Q3a by uniting the couple number and the member type variables separated by an underscore (and using an argument to retain the two variables being united).\n\n\n\n\nHint\n\n\nYour output should look like:\n\n\n# A tibble: 60 × 5\n   id          couple years_together member  satisfaction\n   &lt;chr&gt;       &lt;chr&gt;           &lt;dbl&gt; &lt;chr&gt;          &lt;dbl&gt;\n 1 001_index   001              16.9 index          -0.86\n 2 001_partner 001              16.9 partner        -0.58\n 3 002_index   002              16.5 index          -1.62\n 4 002_partner 002              16.5 partner        -0.71\n 5 003_index   003               9.5 index          -0.7 \n 6 003_partner 003               9.5 partner         2.34\n 7 004_index   004               9.3 index           3.04\n 8 004_partner 004               9.3 partner         4.06\n 9 005_index   005               1   index          -0.13\n10 005_partner 005               1   partner         1.28\n# ℹ 50 more rows"
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#question-4",
    "href": "Unit_II/Assignments/11_Assignment.html#question-4",
    "title": "Week 11 Assignment",
    "section": "Question 4",
    "text": "Question 4\nInstall and load the {Lahman} package, which contains data about baseball players. The questions in this section will use the People and Salaries data frames from this package.\n\nConvert both tables from data frames to tibbles using as_tibble() and assignment.\nCreate a new tibble called Archers that only includes players from the People tibble with the last name “Archer” and the following variables: playerID, nameFirst, nameLast, and debut.\n\n\n\n\nHint\n\n\nYou may not need to use new Unit II functions for this part… Your output should look like:\n\n\n# A tibble: 4 × 4\n  playerID  nameFirst nameLast debut     \n  &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     \n1 archech01 Chris     Archer   2012-06-20\n2 archefr01 Fred      Archer   1936-09-05\n3 archeji01 Jimmy     Archer   1904-09-06\n4 archeji02 Jim       Archer   1961-04-30"
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#question-5",
    "href": "Unit_II/Assignments/11_Assignment.html#question-5",
    "title": "Week 11 Assignment",
    "section": "Question 5",
    "text": "Question 5\n\nMerge the Archers and Salaries tables in such a way that each player’s salaries are shown but players without salary information are dropped.\n\n\n\n\nHint\n\n\nYour output should look like:\n\n\n# A tibble: 3 × 8\n  playerID  nameFirst nameLast debut      yearID teamID lgID   salary\n  &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;       &lt;int&gt; &lt;fct&gt;  &lt;fct&gt;   &lt;int&gt;\n1 archech01 Chris     Archer   2012-06-20   2014 TBA    AL     500000\n2 archech01 Chris     Archer   2012-06-20   2015 TBA    AL    1166667\n3 archech01 Chris     Archer   2012-06-20   2016 TBA    AL    2916667\n\n\n\n\n\n\nWould a full join be helpful in the scenario described in Q5a? Why or why not?"
  },
  {
    "objectID": "Unit_II/Assignments/11_Assignment.html#question-6",
    "href": "Unit_II/Assignments/11_Assignment.html#question-6",
    "title": "Week 11 Assignment",
    "section": "Question 6",
    "text": "Question 6\nWhat is a relational database and when might a data scientist use one? How do the join functions help when working with a relational database?\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#instructions",
    "href": "Unit_II/Assignments/13_Assignment.html#instructions",
    "title": "Week 13 Assignment",
    "section": "Instructions",
    "text": "Instructions\nCreate a new Quarto document (HTML format), clear out the boilerplate code/text, and use this document to store your answers to each of the six questions below. Be sure to enable embed-resources using the header below. If your answer involves writing text, then use markdown to write 2–4 sentences per question; if you answer involves running code, then use one or more code chunks. For questions that ask you to fix code, correct any errors (while achieving the stated goal) and include only the working code in your document.\n---\nformat: \n  html:\n    embed-resources: true\n---\nPlease clearly mark which part of your document is answering which question (e.g., using markdown headings) and remove any “scratch work” or failed attempts from your document before submitting it. Finally, note that many essay-style questions will require you to read between the lines and use your imagination (as opposed to just looking up the answer in the lecture)."
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#question-1",
    "href": "Unit_II/Assignments/13_Assignment.html#question-1",
    "title": "Week 13 Assignment",
    "section": "Question 1",
    "text": "Question 1\n\nHelp me fix my code! I want to let R know that, even though my data is numerical, it is actually categorical with three possible categories: A, B, and C.\n\n\ngroup_letter &lt;- factor(c(1, 3, 2, 1), levels = c(\"A\", \"B\", \"C\"))\ngroup_letter\n\n[1] &lt;NA&gt; &lt;NA&gt; &lt;NA&gt; &lt;NA&gt;\nLevels: A B C\n\n\n\nLook at the output below and recreate it using R.\n\n\n???\n\n\n\n[1] Large  Large  Medium Large  Medium\nLevels: Small &lt; Medium &lt; Large"
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#question-2",
    "href": "Unit_II/Assignments/13_Assignment.html#question-2",
    "title": "Week 13 Assignment",
    "section": "Question 2",
    "text": "Question 2\n\nSummarize the mpg tibble to calculate the average hwy fuel efficiency for each class of car. Then use this summary tibble to create a ggplot where hwy is mapped to x, class is mapped to y, and a column geom is added.\nReorder the columns such that the longer ones (i.e., those with the highest fuel efficiency) are on top.\n\n\n\n\nHint\n\n\nYour answer to part (d) should look like this:"
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#question-3",
    "href": "Unit_II/Assignments/13_Assignment.html#question-3",
    "title": "Week 13 Assignment",
    "section": "Question 3",
    "text": "Question 3\nDownload the movies2021.csv file from Canvas and read it into R. Use it to complete the following steps:\n\nAdd a new column called date that parses the Release_Date character variable as a date variable (using {lubridate})\nAdd a new column called year that extracts the year from the new date variable as a numeric variable (using {lubridate})\nCreate a new column called label that combines strings from the tibble in the following format: “Title (year) [language]” such as “COVID-21: Lethal Virus (2021) [en]”\nSelect the label and Vote_Average variables and print the resulting tibble\n\n\n\n\nHint\n\n\nYour answer to part (d) should look like this:\n\n\n# A tibble: 714 × 2\n   label                                           Vote_Average\n   &lt;chr&gt;                                                  &lt;dbl&gt;\n 1 COVID-21: Lethal Virus (2021) [en]                       5.5\n 2 Shadow in the Cloud (2021) [en]                          5.8\n 3 The Last Warrior: Root of Evil (2021) [ru]               7.1\n 4 The Ogglies: Welcome to Smelliville (2021) [en]          7.3\n 5 Stranded (2021) [pt]                                     4.8\n 6 Maya the Bee: The Golden Orb (2021) [en]                 6.6\n 7 Redemption Day (2021) [en]                               6.3\n 8 Batman: Soul of the Dragon (2021) [en]                   7  \n 9 Butchers (2021) [en]                                     4.9\n10 Monster Family 2 (2021) [en]                             7.1\n# ℹ 704 more rows\n\n\nRemember that you can combine both character vectors and strings in str_c(). For example, try str_c(\"I love \", fruit, \" because \", fruit, \" is delicious!\"). Use this same strategy to create the desired formatting in part (c). Or, if you prefer, use str_glue()."
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#question-4",
    "href": "Unit_II/Assignments/13_Assignment.html#question-4",
    "title": "Week 13 Assignment",
    "section": "Question 4",
    "text": "Question 4\n\nUse the case_when() function to add a new variable called age_stage to the gss_cat tibble (included in {tidyverse}) that equals “early adult” when age is 18 to 34, “middle adult” when age is 35 to 64, and “late adult” when age is 65 or above.\nUse the fct_collapse() function to collapse the marital factor from gss_cat into a new factor called married with the following three levels: “Never” (Never Married), “Previously” (Separated, Divorced, Widowed), and “Currently” (Married)."
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#question-5",
    "href": "Unit_II/Assignments/13_Assignment.html#question-5",
    "title": "Week 13 Assignment",
    "section": "Question 5",
    "text": "Question 5\n\nHelp me fix my code! I want to create a function that transforms my x vector by centering it (i.e., subtracting its mean) and normalizing it (i.e., dividing it by a constant value y). This is useful for some statistical analyses…\n\n\nmy_function &lt;- function(x) {\n  (x - mean(x)) / y\n}\nmy_function(x = c(10, 20, 5, 8), y = 3)\n\nError in my_function(x = c(10, 20, 5, 8), y = 3): unused argument (y = 3)\n\n\n\nTo the fixed function from part (a), add a default value to the y argument that is equal to the standard deviation of x. (Hint: Default values don’t have to be a single constant value; they can be calculated from other arguments.)"
  },
  {
    "objectID": "Unit_II/Assignments/13_Assignment.html#question-6",
    "href": "Unit_II/Assignments/13_Assignment.html#question-6",
    "title": "Week 13 Assignment",
    "section": "Question 6",
    "text": "Question 6\n\nWhy might a data scientist create their own custom function? Provide an example of a time when you might write a custom function in your own work (you can just describe it, no need to include the actual code).\nWhy do we need the functions from {purrr} if we already know how to use across()? Provide an example of a time when you might use map() or walk() in your own work (you can just describe it, no need to include the actual code).\n\n\n✅ Done! Please save and then render your document to an HTML file. Check it over to make sure it is complete (and rendered properly) and then upload this file to Canvas by the deadline listed on the syllabus. Note that, if any of your code chunks has an error in it, the HTML file will not render properly (this is why removing scratch work is important)."
  },
  {
    "objectID": "Unit_II/project_II.html#project-overview",
    "href": "Unit_II/project_II.html#project-overview",
    "title": "Unit II Project",
    "section": "Project Overview",
    "text": "Project Overview\nThe purpose of the Unit II Project is to give you a chance to apply your new data science skills (i.e., programming, wrangling, visualization, and communication) to real-world data that holds some interest for you. You will work as a team of 4-5 students. This will give you an opportunity to develop and hone your collaborative, teamwork skills (e.g., planning, communication, accountability, and mutual support). Each team will work together to create a tidy dataset and Quarto document including text, code, and figures. You will also submit a debriefing document as an individual.\nThe Unit II Project is very similar in form to the Unit I Project. However, your team will need to use skills learned during Unit II. At a minimum, your project should involve summarization, reshaping and/or joining data, advanced visualization elements, and special data types and/or automation. Note that the Unit II Project should be entirely unique (i.e., not a re-hash of the Unit I Project) and should be entirely created by the members of your team (i.e., not copied from the internet or written by AI tools)."
  },
  {
    "objectID": "Unit_II/project_II.html#topic-areas",
    "href": "Unit_II/project_II.html#topic-areas",
    "title": "Unit II Project",
    "section": "Topic Areas",
    "text": "Topic Areas\n\nSocial Sciences - any topic related to human behaviors and societies\nExamples: languages, wellbeing, spending, etc.\nLife Sciences - any topic related to living organisms (large and small)\nExamples: animals, plants, crops, habitats, etc.\nPhysical Sciences - any topic related to inanimate natural objects\nExamples: climate, oceans, stars, elements, etc.\nMedical Sciences - any topic related to health and medicine\nExamples: diseases, treatments, prevention, etc.\nSports - any topic related to competitive physical activity or gaming\nExamples: games, players, coaches, records, etc.\nEntertainment - any topic related to pop culture and entertainment\nExamples: books, characters, albums, films, etc.\nFood and Drink - any topic related to nutrition and consumption\nExamples: restaurants, menus, awards, wine, etc.\nPolitics and History - any topic related to governance and past events\nExamples: voting, approval, development, events, etc."
  },
  {
    "objectID": "Unit_II/project_II.html#project-components",
    "href": "Unit_II/project_II.html#project-components",
    "title": "Unit II Project",
    "section": "Project Components",
    "text": "Project Components\n\nThe Planning Document (due at the end of week 1, submitted as a team)\nThe Report Document (due at the end of week 2, submitted as a team)\nThe Debriefing Document (due at the end of week 2, submitted as an individual)"
  },
  {
    "objectID": "Unit_II/project_II.html#planning-document",
    "href": "Unit_II/project_II.html#planning-document",
    "title": "Unit II Project",
    "section": "Planning Document",
    "text": "Planning Document\nYour team will need to submit a planning document at the end of the first week. This plan can be any kind of text document (e.g., docx or markdown) and should include the names of all team members, a description of what the team accomplished during the first week, what the team plans to accomplish during the second week, how the team plans to handle communication and collaboration, and a timeline with assigned tasks and rough deadlines."
  },
  {
    "objectID": "Unit_II/project_II.html#report-document",
    "href": "Unit_II/project_II.html#report-document",
    "title": "Unit II Project",
    "section": "Report Document",
    "text": "Report Document\nThe main product of the project is a report document that your team will need to submit at the end of the second week. It should be a Quarto HTML document that describes the dataset your team designed, several polished figures showing off the dataset, and some text describing insights your team gathered from the dataset and visualizations.\n\nData Design\nFirst, as a team, create a new dataset relevant to your topic area from online sources. It should have at least 100 observations (20-25 per team member) and 4-5 variables (including both numbers and strings as well as discrete and continuous values). You are also welcome to add more observations than 100 if you want to, but doing so isn’t necessary.\n\nDecide on data source(s). Where will your data come from? Good sources include Wikipedia articles, specialty websites about your topic area, or your own data collection efforts.\nImport the dataset. Read the data into R as one or more tibbles. Make sure everything read in properly and that all missing values are set to NA.\nWrangle the data. Use skills from Unit II to reshape and/or join the data and deal with special data types and/or automation tasks.\nSummarize the data. In addition to your visualizations, create between one and three summary tibbles using summarize() that reveals interesting information about your data (e.g., counts, ranges, means).\n\n\n\nVisualization\nSecond, as a team, create one figure per team member to visualize variables and/or relationships in your dataset. These figures should be interesting and well-polished. The goal is to learn something about your topic and tell a simple story about your data through these figures.\n\nDecide on your figures. What variables and/or relationships are the most interesting? Which are most likely to yield conclusions and insights?\nCreate your figures. Implement your designs in R using ggplot2, creating separate figure objects. Use at least one advanced element (e.g., faceting, positions, stat summary, highlighting, layouts) in each figure.\nPolish your figures. Adjust your scales and aesthetic settings to make them look good. Add some labels and customize the theme.\n\n\n\nCommunication\nThird, as a team, describe your project in a Quarto document with the following sections:\n\nOverview - In text, give a brief introduction to your project. Describe what your project is about (i.e., what was your topic area and what specific subtopic did you pick) and why it was interesting to your team.\nWrangling - In text, describe the process of finding your data source(s), importing the data, wrangling, and summarizing it. Also define every variable in your dataset and, when applicable, including information about units or possible categories. Include R chunks for anything you did in R and print the tibble containing your dataset so that readers can see it.\nVisualization - In text, describe the process of deciding on your figures, aesthetic mappings, and geometric objects. Include R chunks for creating the figures and print the figures so that readers can see them.\nConclusions - In text, describe a few conclusions or insights into your topic area that your project and visualizations helped you to discover and think more deeply about."
  },
  {
    "objectID": "Unit_II/project_II.html#debriefing-document",
    "href": "Unit_II/project_II.html#debriefing-document",
    "title": "Unit II Project",
    "section": "Debriefing Document",
    "text": "Debriefing Document\nFinally, as an individual, write a brief (3-6 sentence) answer to each of the following questions. You can use any format for this report (e.g., Word).\n\nWhat did you contribute to the project?\nExamples: What tasks did you help complete and how? What ideas did you help brainstorm and evaluate? What decisions did you help make?\nWhat did you learn about doing data science with real-world data?\nExamples: How does real-world data differ from examples from class? What is it like to have to collect your own data? What challenges came up?\nWhat did you learn about working in a data science team?\nExamples: What parts were easier or harder than you anticipated? What worked and what didn’t as a team? How can you improve as a teammate?\nHow much did each teammate contribute and use teamwork skills?\nPlease describe each teammate separately and describe their contributions and teamwork skills (good or bad). Your answers will be kept confidential."
  },
  {
    "objectID": "Unit_II/project_II.html#evaluation",
    "href": "Unit_II/project_II.html#evaluation",
    "title": "Unit II Project",
    "section": "Evaluation",
    "text": "Evaluation\nI will evaluate the projects with the following grading rubric (20 pts total).\n\nTeam: Plan (2 pts total)\nTeam: Data Design (4 pts total)\nTeam: Visualization (5 pts total)\nTeam: Communication (5 pts total)\nIndividual: Report (4 pts total)"
  },
  {
    "objectID": "Unit_II/week_11.html",
    "href": "Unit_II/week_11.html",
    "title": "Week 11: Wrangle",
    "section": "",
    "text": "Separate and Unite\nPivot Longer\nPivot Wider\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [11a]"
  },
  {
    "objectID": "Unit_II/week_11.html#a-reshaping-data",
    "href": "Unit_II/week_11.html#a-reshaping-data",
    "title": "Week 11: Wrangle",
    "section": "",
    "text": "Separate and Unite\nPivot Longer\nPivot Wider\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [11a]"
  },
  {
    "objectID": "Unit_II/week_11.html#b-joining-data",
    "href": "Unit_II/week_11.html#b-joining-data",
    "title": "Week 11: Wrangle",
    "section": "[11b] Joining Data",
    "text": "[11b] Joining Data\n\nTopics\n\nRelational Data\nBasic Joins\ndplyr Joins\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nActivity\n\nActivity [11b]"
  },
  {
    "objectID": "Unit_II/week_11.html#week-11-assignment",
    "href": "Unit_II/week_11.html#week-11-assignment",
    "title": "Week 11: Wrangle",
    "section": "Week 11 Assignment",
    "text": "Week 11 Assignment\n\nInstructions\n\nWeek 11 Assignment\n\n\n\nData Files\n\ncouples.rds"
  },
  {
    "objectID": "Unit_II/week_13.html",
    "href": "Unit_II/week_13.html",
    "title": "Week 13: Program",
    "section": "",
    "text": "Strings\nFactors\nDates and Times\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [13a]"
  },
  {
    "objectID": "Unit_II/week_13.html#a-special-data-types",
    "href": "Unit_II/week_13.html#a-special-data-types",
    "title": "Week 13: Program",
    "section": "",
    "text": "Strings\nFactors\nDates and Times\n\n\n\n\n\n\nClick here to view the slides in their own window.\n\n\n\n\n\n\n\n\n\nActivity [13a]"
  },
  {
    "objectID": "Unit_II/week_13.html#b-automation",
    "href": "Unit_II/week_13.html#b-automation",
    "title": "Week 13: Program",
    "section": "[13b] Automation",
    "text": "[13b] Automation\n\nTopics\n\nControl Flow\nCustom Functions\nBasic Iteration\n\n\n\nSlides\n\n\n\n\nRecording\n\n\n\n\nData Files\nTo follow along with the iteration live coding, save these three files into a folder called “data” inside your project folder:\n\npid_001.csv\npid_002.csv\npid_003.csv\n\n\n\nActivity\n\nActivity [13b]"
  },
  {
    "objectID": "Unit_II/week_13.html#week-13-assignment",
    "href": "Unit_II/week_13.html#week-13-assignment",
    "title": "Week 13: Program",
    "section": "Week 13 Assignment",
    "text": "Week 13 Assignment\n\nInstructions\n\nWeek 13 Assignment\n\n\n\nData Files\n\nmovies2021.csv"
  }
]